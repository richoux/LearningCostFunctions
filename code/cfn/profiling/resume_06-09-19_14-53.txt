0x00007f468f21cc02 in ghost::Random::Random (other=..., this=0x5635a57358a0) at /usr/include/c++/8/ext/new_allocator.h:86
#0  0x00007f468f21cc02 in ghost::Random::Random (other=..., this=0x5635a57358a0) at /usr/include/c++/8/ext/new_allocator.h:86
#1  ghost::Domain::Domain(ghost::Domain const&) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/domain.cpp:71
#2  0x00007f468f21d5ba in ghost::Variable::Variable(ghost::Variable const&) () at /usr/include/c++/8/bits/basic_string.h:936
#3  0x00005635a46c1743 in void std::vector<ghost::Variable, std::allocator<ghost::Variable> >::_M_realloc_insert<ghost::Variable>(__gnu_cxx::__normal_iterator<ghost::Variable*, std::vector<ghost::Variable, std::allocator<ghost::Variable> > >, ghost::Variable&&) ()
#4  0x00005635a46c145e in std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > > std::transform<__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, __gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}) [clone .isra.44] ()
#5  0x00005635a46c14b4 in g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int) ()
#7  0x00007f468f21f18b in ghost::Constraint::cost (this=<optimized out>) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/include/constraint.hpp:108
#8  ghost::Solver::simulate_local_move_cost (this=this@entry=0x7ffea73d8d90, variable=variable@entry=0x7f468e1be0d8, value=<optimized out>, costConstraints=std::vector of length 7, capacity 7 = {...}, currentSatCost=currentSatCost@entry=1.0167885997548654) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:510
#9  0x00007f468f220068 in ghost::Solver::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:341
#10 0x00007f468f22053a in ghost::Solver::solve(double&, std::vector<int, std::allocator<int> >&, double, double, bool) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:155
#0  0x00007f468f21cc02 in ghost::Random::Random (other=..., this=0x5635a57358a0) at /usr/include/c++/8/ext/new_allocator.h:86
#1  ghost::Domain::Domain(ghost::Domain const&) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/domain.cpp:71
#2  0x00007f468f21d5ba in ghost::Variable::Variable(ghost::Variable const&) () at /usr/include/c++/8/bits/basic_string.h:936
#3  0x00005635a46c1743 in void std::vector<ghost::Variable, std::allocator<ghost::Variable> >::_M_realloc_insert<ghost::Variable>(__gnu_cxx::__normal_iterator<ghost::Variable*, std::vector<ghost::Variable, std::allocator<ghost::Variable> > >, ghost::Variable&&) ()
#4  0x00005635a46c145e in std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > > std::transform<__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, __gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}) [clone .isra.44] ()
#5  0x00005635a46c14b4 in g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int) ()
#7  0x00007f468f21f18b in ghost::Constraint::cost (this=<optimized out>) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/include/constraint.hpp:108
#8  ghost::Solver::simulate_local_move_cost (this=this@entry=0x7ffea73d8d90, variable=variable@entry=0x7f468e1be0d8, value=<optimized out>, costConstraints=std::vector of length 7, capacity 7 = {...}, currentSatCost=currentSatCost@entry=1.0167885997548654) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:510
#9  0x00007f468f220068 in ghost::Solver::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:341
#10 0x00007f468f22053a in ghost::Solver::solve(double&, std::vector<int, std::allocator<int> >&, double, double, bool) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:155
#0  0x00007f468f21cc02 in ghost::Random::Random (other=..., this=0x5635a57358a0) at /usr/include/c++/8/ext/new_allocator.h:86
#1  ghost::Domain::Domain(ghost::Domain const&) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/domain.cpp:71
#2  0x00007f468f21d5ba in ghost::Variable::Variable(ghost::Variable const&) () at /usr/include/c++/8/bits/basic_string.h:936
#3  0x00005635a46c1743 in void std::vector<ghost::Variable, std::allocator<ghost::Variable> >::_M_realloc_insert<ghost::Variable>(__gnu_cxx::__normal_iterator<ghost::Variable*, std::vector<ghost::Variable, std::allocator<ghost::Variable> > >, ghost::Variable&&) ()
#4  0x00005635a46c145e in std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > > std::transform<__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, __gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}) [clone .isra.44] ()
#5  0x00005635a46c14b4 in g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int) ()
#7  0x00007f468f21f18b in ghost::Constraint::cost (this=<optimized out>) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/include/constraint.hpp:108
#8  ghost::Solver::simulate_local_move_cost (this=this@entry=0x7ffea73d8d90, variable=variable@entry=0x7f468e1be0d8, value=<optimized out>, costConstraints=std::vector of length 7, capacity 7 = {...}, currentSatCost=currentSatCost@entry=1.0167885997548654) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:510
#9  0x00007f468f220068 in ghost::Solver::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:341
#10 0x00007f468f22053a in ghost::Solver::solve(double&, std::vector<int, std::allocator<int> >&, double, double, bool) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:155
0x00007f468f21cc02 in ghost::Random::Random (other=..., this=0x5635a58c98b8) at /usr/include/c++/8/ext/new_allocator.h:86
#0  0x00007f468f21cc02 in ghost::Random::Random (other=..., this=0x5635a58c98b8) at /usr/include/c++/8/ext/new_allocator.h:86
#1  ghost::Domain::Domain(ghost::Domain const&) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/domain.cpp:71
#2  0x00007f468f21d5ba in ghost::Variable::Variable(ghost::Variable const&) () at /usr/include/c++/8/bits/basic_string.h:936
#3  0x00005635a46c13b3 in std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > > std::transform<__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, __gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}) [clone .isra.44] ()
#4  0x00005635a46c14b4 in g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int) ()
#6  0x00007f468f21f18b in ghost::Constraint::cost (this=<optimized out>) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/include/constraint.hpp:108
#7  ghost::Solver::simulate_local_move_cost (this=this@entry=0x7ffea73d8d90, variable=variable@entry=0x7f468e1c0880, value=<optimized out>, costConstraints=std::vector of length 7, capacity 7 = {...}, currentSatCost=currentSatCost@entry=1.0167885997548654) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:510
#8  0x00007f468f220068 in ghost::Solver::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:341
#9  0x00007f468f22053a in ghost::Solver::solve(double&, std::vector<int, std::allocator<int> >&, double, double, bool) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:155
#0  0x00007f468f21cc02 in ghost::Random::Random (other=..., this=0x5635a58c98b8) at /usr/include/c++/8/ext/new_allocator.h:86
#1  ghost::Domain::Domain(ghost::Domain const&) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/domain.cpp:71
#2  0x00007f468f21d5ba in ghost::Variable::Variable(ghost::Variable const&) () at /usr/include/c++/8/bits/basic_string.h:936
#3  0x00005635a46c13b3 in std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > > std::transform<__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, __gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}) [clone .isra.44] ()
#4  0x00005635a46c14b4 in g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int) ()
#6  0x00007f468f21f18b in ghost::Constraint::cost (this=<optimized out>) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/include/constraint.hpp:108
#7  ghost::Solver::simulate_local_move_cost (this=this@entry=0x7ffea73d8d90, variable=variable@entry=0x7f468e1c0880, value=<optimized out>, costConstraints=std::vector of length 7, capacity 7 = {...}, currentSatCost=currentSatCost@entry=1.0167885997548654) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:510
#8  0x00007f468f220068 in ghost::Solver::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:341
#9  0x00007f468f22053a in ghost::Solver::solve(double&, std::vector<int, std::allocator<int> >&, double, double, bool) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:155
#0  0x00007f468f21cc02 in ghost::Random::Random (other=..., this=0x5635a58c98b8) at /usr/include/c++/8/ext/new_allocator.h:86
#1  ghost::Domain::Domain(ghost::Domain const&) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/domain.cpp:71
#2  0x00007f468f21d5ba in ghost::Variable::Variable(ghost::Variable const&) () at /usr/include/c++/8/bits/basic_string.h:936
#3  0x00005635a46c13b3 in std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > > std::transform<__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, __gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}) [clone .isra.44] ()
#4  0x00005635a46c14b4 in g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int) ()
#6  0x00007f468f21f18b in ghost::Constraint::cost (this=<optimized out>) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/include/constraint.hpp:108
#7  ghost::Solver::simulate_local_move_cost (this=this@entry=0x7ffea73d8d90, variable=variable@entry=0x7f468e1c0880, value=<optimized out>, costConstraints=std::vector of length 7, capacity 7 = {...}, currentSatCost=currentSatCost@entry=1.0167885997548654) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:510
#8  0x00007f468f220068 in ghost::Solver::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:341
#9  0x00007f468f22053a in ghost::Solver::solve(double&, std::vector<int, std::allocator<int> >&, double, double, bool) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:155
0x00007f468f21cc02 in ghost::Random::Random (other=..., this=0x5635a5866818) at /usr/include/c++/8/ext/new_allocator.h:86
#0  0x00007f468f21cc02 in ghost::Random::Random (other=..., this=0x5635a5866818) at /usr/include/c++/8/ext/new_allocator.h:86
#1  ghost::Domain::Domain(ghost::Domain const&) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/domain.cpp:71
#2  0x00007f468f21d5ba in ghost::Variable::Variable(ghost::Variable const&) () at /usr/include/c++/8/bits/basic_string.h:936
#3  0x00005635a46c1743 in void std::vector<ghost::Variable, std::allocator<ghost::Variable> >::_M_realloc_insert<ghost::Variable>(__gnu_cxx::__normal_iterator<ghost::Variable*, std::vector<ghost::Variable, std::allocator<ghost::Variable> > >, ghost::Variable&&) ()
#4  0x00005635a46c145e in std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > > std::transform<__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, __gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}) [clone .isra.44] ()
#5  0x00005635a46c14b4 in g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int) ()
#7  0x00007f468f21f18b in ghost::Constraint::cost (this=<optimized out>) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/include/constraint.hpp:108
#8  ghost::Solver::simulate_local_move_cost (this=this@entry=0x7ffea73d8d90, variable=variable@entry=0x7f468e1c7f78, value=<optimized out>, costConstraints=std::vector of length 7, capacity 7 = {...}, currentSatCost=currentSatCost@entry=1.0167885997548654) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:510
#9  0x00007f468f220068 in ghost::Solver::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:341
#10 0x00007f468f22053a in ghost::Solver::solve(double&, std::vector<int, std::allocator<int> >&, double, double, bool) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:155
#0  0x00007f468f21cc02 in ghost::Random::Random (other=..., this=0x5635a5866818) at /usr/include/c++/8/ext/new_allocator.h:86
#1  ghost::Domain::Domain(ghost::Domain const&) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/domain.cpp:71
#2  0x00007f468f21d5ba in ghost::Variable::Variable(ghost::Variable const&) () at /usr/include/c++/8/bits/basic_string.h:936
#3  0x00005635a46c1743 in void std::vector<ghost::Variable, std::allocator<ghost::Variable> >::_M_realloc_insert<ghost::Variable>(__gnu_cxx::__normal_iterator<ghost::Variable*, std::vector<ghost::Variable, std::allocator<ghost::Variable> > >, ghost::Variable&&) ()
#4  0x00005635a46c145e in std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > > std::transform<__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, __gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}) [clone .isra.44] ()
#5  0x00005635a46c14b4 in g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int) ()
#7  0x00007f468f21f18b in ghost::Constraint::cost (this=<optimized out>) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/include/constraint.hpp:108
#8  ghost::Solver::simulate_local_move_cost (this=this@entry=0x7ffea73d8d90, variable=variable@entry=0x7f468e1c7f78, value=<optimized out>, costConstraints=std::vector of length 7, capacity 7 = {...}, currentSatCost=currentSatCost@entry=1.0167885997548654) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:510
#9  0x00007f468f220068 in ghost::Solver::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:341
#10 0x00007f468f22053a in ghost::Solver::solve(double&, std::vector<int, std::allocator<int> >&, double, double, bool) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:155
#0  0x00007f468f21cc02 in ghost::Random::Random (other=..., this=0x5635a5866818) at /usr/include/c++/8/ext/new_allocator.h:86
#1  ghost::Domain::Domain(ghost::Domain const&) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/domain.cpp:71
#2  0x00007f468f21d5ba in ghost::Variable::Variable(ghost::Variable const&) () at /usr/include/c++/8/bits/basic_string.h:936
#3  0x00005635a46c1743 in void std::vector<ghost::Variable, std::allocator<ghost::Variable> >::_M_realloc_insert<ghost::Variable>(__gnu_cxx::__normal_iterator<ghost::Variable*, std::vector<ghost::Variable, std::allocator<ghost::Variable> > >, ghost::Variable&&) ()
#4  0x00005635a46c145e in std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > > std::transform<__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, __gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}) [clone .isra.44] ()
#5  0x00005635a46c14b4 in g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int) ()
#7  0x00007f468f21f18b in ghost::Constraint::cost (this=<optimized out>) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/include/constraint.hpp:108
#8  ghost::Solver::simulate_local_move_cost (this=this@entry=0x7ffea73d8d90, variable=variable@entry=0x7f468e1c7f78, value=<optimized out>, costConstraints=std::vector of length 7, capacity 7 = {...}, currentSatCost=currentSatCost@entry=1.0167885997548654) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:510
#9  0x00007f468f220068 in ghost::Solver::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:341
#10 0x00007f468f22053a in ghost::Solver::solve(double&, std::vector<int, std::allocator<int> >&, double, double, bool) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:155
0x00007f468f21cc02 in ghost::Random::Random (other=..., this=0x5635a57ecf40) at /usr/include/c++/8/ext/new_allocator.h:86
#0  0x00007f468f21cc02 in ghost::Random::Random (other=..., this=0x5635a57ecf40) at /usr/include/c++/8/ext/new_allocator.h:86
#1  ghost::Domain::Domain(ghost::Domain const&) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/domain.cpp:71
#2  0x00007f468f21d5ba in ghost::Variable::Variable(ghost::Variable const&) () at /usr/include/c++/8/bits/basic_string.h:936
#3  0x00005635a46c13b3 in std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > > std::transform<__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, __gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}) [clone .isra.44] ()
#4  0x00005635a46c14b4 in g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int) ()
#6  0x00007f468f21f18b in ghost::Constraint::cost (this=<optimized out>) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/include/constraint.hpp:108
#7  ghost::Solver::simulate_local_move_cost (this=this@entry=0x7ffea73d8d90, variable=variable@entry=0x7f468e1ca720, value=<optimized out>, costConstraints=std::vector of length 7, capacity 7 = {...}, currentSatCost=currentSatCost@entry=1.0167885997548654) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:510
#8  0x00007f468f220068 in ghost::Solver::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:341
#9  0x00007f468f22053a in ghost::Solver::solve(double&, std::vector<int, std::allocator<int> >&, double, double, bool) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:155
#0  0x00007f468f21cc02 in ghost::Random::Random (other=..., this=0x5635a57ecf40) at /usr/include/c++/8/ext/new_allocator.h:86
#1  ghost::Domain::Domain(ghost::Domain const&) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/domain.cpp:71
#2  0x00007f468f21d5ba in ghost::Variable::Variable(ghost::Variable const&) () at /usr/include/c++/8/bits/basic_string.h:936
#3  0x00005635a46c13b3 in std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > > std::transform<__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, __gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}) [clone .isra.44] ()
#4  0x00005635a46c14b4 in g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int) ()
#6  0x00007f468f21f18b in ghost::Constraint::cost (this=<optimized out>) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/include/constraint.hpp:108
#7  ghost::Solver::simulate_local_move_cost (this=this@entry=0x7ffea73d8d90, variable=variable@entry=0x7f468e1ca720, value=<optimized out>, costConstraints=std::vector of length 7, capacity 7 = {...}, currentSatCost=currentSatCost@entry=1.0167885997548654) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:510
#8  0x00007f468f220068 in ghost::Solver::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:341
#9  0x00007f468f22053a in ghost::Solver::solve(double&, std::vector<int, std::allocator<int> >&, double, double, bool) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:155
#0  0x00007f468f21cc02 in ghost::Random::Random (other=..., this=0x5635a57ecf40) at /usr/include/c++/8/ext/new_allocator.h:86
#1  ghost::Domain::Domain(ghost::Domain const&) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/domain.cpp:71
#2  0x00007f468f21d5ba in ghost::Variable::Variable(ghost::Variable const&) () at /usr/include/c++/8/bits/basic_string.h:936
#3  0x00005635a46c13b3 in std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > > std::transform<__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, __gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}) [clone .isra.44] ()
#4  0x00005635a46c14b4 in g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int) ()
#6  0x00007f468f21f18b in ghost::Constraint::cost (this=<optimized out>) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/include/constraint.hpp:108
#7  ghost::Solver::simulate_local_move_cost (this=this@entry=0x7ffea73d8d90, variable=variable@entry=0x7f468e1ca720, value=<optimized out>, costConstraints=std::vector of length 7, capacity 7 = {...}, currentSatCost=currentSatCost@entry=1.0167885997548654) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:510
#8  0x00007f468f220068 in ghost::Solver::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:341
#9  0x00007f468f22053a in ghost::Solver::solve(double&, std::vector<int, std::allocator<int> >&, double, double, bool) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:155
0x00007f8fe3b86c02 in ghost::Random::Random (other=..., this=0x56268ddb9ce8) at /usr/include/c++/8/ext/new_allocator.h:86
#0  0x00007f8fe3b86c02 in ghost::Random::Random (other=..., this=0x56268ddb9ce8) at /usr/include/c++/8/ext/new_allocator.h:86
#1  ghost::Domain::Domain(ghost::Domain const&) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/domain.cpp:71
#2  0x00007f8fe3b875ba in ghost::Variable::Variable(ghost::Variable const&) () at /usr/include/c++/8/bits/basic_string.h:936
#3  0x000056268d6dc743 in void std::vector<ghost::Variable, std::allocator<ghost::Variable> >::_M_realloc_insert<ghost::Variable>(__gnu_cxx::__normal_iterator<ghost::Variable*, std::vector<ghost::Variable, std::allocator<ghost::Variable> > >, ghost::Variable&&) ()
#4  0x000056268d6dc45e in std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > > std::transform<__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, __gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}) [clone .isra.44] ()
#5  0x000056268d6dc4b4 in g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int) ()
#7  0x00007f8fe3b8841a in ghost::Constraint::cost (this=<optimized out>) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/include/constraint.hpp:108
#8  ghost::Solver::compute_constraints_costs (this=this@entry=0x7ffe17467cf0, costConstraints=std::vector of length 7, capacity 7 = {...}) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:293
#9  0x00007f8fe3b8a523 in ghost::Solver::solve(double&, std::vector<int, std::allocator<int> >&, double, double, bool) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:154
#0  0x00007f8fe3b86c02 in ghost::Random::Random (other=..., this=0x56268ddb9ce8) at /usr/include/c++/8/ext/new_allocator.h:86
#1  ghost::Domain::Domain(ghost::Domain const&) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/domain.cpp:71
#2  0x00007f8fe3b875ba in ghost::Variable::Variable(ghost::Variable const&) () at /usr/include/c++/8/bits/basic_string.h:936
#3  0x000056268d6dc743 in void std::vector<ghost::Variable, std::allocator<ghost::Variable> >::_M_realloc_insert<ghost::Variable>(__gnu_cxx::__normal_iterator<ghost::Variable*, std::vector<ghost::Variable, std::allocator<ghost::Variable> > >, ghost::Variable&&) ()
#4  0x000056268d6dc45e in std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > > std::transform<__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, __gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}) [clone .isra.44] ()
#5  0x000056268d6dc4b4 in g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int) ()
#7  0x00007f8fe3b8841a in ghost::Constraint::cost (this=<optimized out>) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/include/constraint.hpp:108
#8  ghost::Solver::compute_constraints_costs (this=this@entry=0x7ffe17467cf0, costConstraints=std::vector of length 7, capacity 7 = {...}) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:293
#9  0x00007f8fe3b8a523 in ghost::Solver::solve(double&, std::vector<int, std::allocator<int> >&, double, double, bool) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:154
#0  0x00007f8fe3b86c02 in ghost::Random::Random (other=..., this=0x56268ddb9ce8) at /usr/include/c++/8/ext/new_allocator.h:86
#1  ghost::Domain::Domain(ghost::Domain const&) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/domain.cpp:71
#2  0x00007f8fe3b875ba in ghost::Variable::Variable(ghost::Variable const&) () at /usr/include/c++/8/bits/basic_string.h:936
#3  0x000056268d6dc743 in void std::vector<ghost::Variable, std::allocator<ghost::Variable> >::_M_realloc_insert<ghost::Variable>(__gnu_cxx::__normal_iterator<ghost::Variable*, std::vector<ghost::Variable, std::allocator<ghost::Variable> > >, ghost::Variable&&) ()
#4  0x000056268d6dc45e in std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > > std::transform<__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, __gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}) [clone .isra.44] ()
#5  0x000056268d6dc4b4 in g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int) ()
#7  0x00007f8fe3b8841a in ghost::Constraint::cost (this=<optimized out>) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/include/constraint.hpp:108
#8  ghost::Solver::compute_constraints_costs (this=this@entry=0x7ffe17467cf0, costConstraints=std::vector of length 7, capacity 7 = {...}) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:293
#9  0x00007f8fe3b8a523 in ghost::Solver::solve(double&, std::vector<int, std::allocator<int> >&, double, double, bool) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:154
#2  ghost::Random::Random (other=..., this=0x7ffe17460998) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/include/misc/random.hpp:78
#3  ghost::Domain::Domain(ghost::Domain const&) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/domain.cpp:71
#4  0x00007f8fe3b875ba in ghost::Variable::Variable(ghost::Variable const&) () at /usr/include/c++/8/bits/basic_string.h:936
#5  0x000056268d6dc39b in std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > > std::transform<__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, __gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}) [clone .isra.44] ()
#6  0x000056268d6dc4b4 in g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int) ()
#8  0x00007f8fe3b8918b in ghost::Constraint::cost (this=<optimized out>) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/include/constraint.hpp:108
#9  ghost::Solver::simulate_local_move_cost (this=this@entry=0x7ffe17467cf0, variable=variable@entry=0x7f8fe2af4010, value=<optimized out>, costConstraints=std::vector of length 7, capacity 7 = {...}, currentSatCost=currentSatCost@entry=1.8914956714925983) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:510
#10 0x00007f8fe3b8a068 in ghost::Solver::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:341
#11 0x00007f8fe3b8a53a in ghost::Solver::solve(double&, std::vector<int, std::allocator<int> >&, double, double, bool) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:155
#2  ghost::Random::Random (other=..., this=0x7ffe17460998) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/include/misc/random.hpp:78
#3  ghost::Domain::Domain(ghost::Domain const&) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/domain.cpp:71
#4  0x00007f8fe3b875ba in ghost::Variable::Variable(ghost::Variable const&) () at /usr/include/c++/8/bits/basic_string.h:936
#5  0x000056268d6dc39b in std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > > std::transform<__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, __gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}) [clone .isra.44] ()
#6  0x000056268d6dc4b4 in g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int) ()
#8  0x00007f8fe3b8918b in ghost::Constraint::cost (this=<optimized out>) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/include/constraint.hpp:108
#9  ghost::Solver::simulate_local_move_cost (this=this@entry=0x7ffe17467cf0, variable=variable@entry=0x7f8fe2af4010, value=<optimized out>, costConstraints=std::vector of length 7, capacity 7 = {...}, currentSatCost=currentSatCost@entry=1.8914956714925983) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:510
#10 0x00007f8fe3b8a068 in ghost::Solver::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:341
#11 0x00007f8fe3b8a53a in ghost::Solver::solve(double&, std::vector<int, std::allocator<int> >&, double, double, bool) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:155
#2  ghost::Random::Random (other=..., this=0x7ffe17460998) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/include/misc/random.hpp:78
#3  ghost::Domain::Domain(ghost::Domain const&) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/domain.cpp:71
#4  0x00007f8fe3b875ba in ghost::Variable::Variable(ghost::Variable const&) () at /usr/include/c++/8/bits/basic_string.h:936
#5  0x000056268d6dc39b in std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > > std::transform<__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, __gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}) [clone .isra.44] ()
#6  0x000056268d6dc4b4 in g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int) ()
#8  0x00007f8fe3b8918b in ghost::Constraint::cost (this=<optimized out>) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/include/constraint.hpp:108
#9  ghost::Solver::simulate_local_move_cost (this=this@entry=0x7ffe17467cf0, variable=variable@entry=0x7f8fe2af4010, value=<optimized out>, costConstraints=std::vector of length 7, capacity 7 = {...}, currentSatCost=currentSatCost@entry=1.8914956714925983) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:510
#10 0x00007f8fe3b8a068 in ghost::Solver::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:341
#11 0x00007f8fe3b8a53a in ghost::Solver::solve(double&, std::vector<int, std::allocator<int> >&, double, double, bool) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:155
0x00007f8fe3b86c02 in ghost::Random::Random (other=..., this=0x56268dfbb330) at /usr/include/c++/8/ext/new_allocator.h:86
#0  0x00007f8fe3b86c02 in ghost::Random::Random (other=..., this=0x56268dfbb330) at /usr/include/c++/8/ext/new_allocator.h:86
#1  ghost::Domain::Domain(ghost::Domain const&) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/domain.cpp:71
#2  0x00007f8fe3b875ba in ghost::Variable::Variable(ghost::Variable const&) () at /usr/include/c++/8/bits/basic_string.h:936
#3  0x000056268d6dc3b3 in std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > > std::transform<__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, __gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}) [clone .isra.44] ()
#4  0x000056268d6dc4b4 in g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int) ()
#6  0x00007f8fe3b8918b in ghost::Constraint::cost (this=<optimized out>) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/include/constraint.hpp:108
#7  ghost::Solver::simulate_local_move_cost (this=this@entry=0x7ffe17467cf0, variable=variable@entry=0x7f8fe2af8f60, value=<optimized out>, costConstraints=std::vector of length 7, capacity 7 = {...}, currentSatCost=currentSatCost@entry=1.8914956714925983) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:510
#8  0x00007f8fe3b8a068 in ghost::Solver::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:341
#9  0x00007f8fe3b8a53a in ghost::Solver::solve(double&, std::vector<int, std::allocator<int> >&, double, double, bool) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:155
#0  0x00007f8fe3b86c02 in ghost::Random::Random (other=..., this=0x56268dfbb330) at /usr/include/c++/8/ext/new_allocator.h:86
#1  ghost::Domain::Domain(ghost::Domain const&) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/domain.cpp:71
#2  0x00007f8fe3b875ba in ghost::Variable::Variable(ghost::Variable const&) () at /usr/include/c++/8/bits/basic_string.h:936
#3  0x000056268d6dc3b3 in std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > > std::transform<__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, __gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}) [clone .isra.44] ()
#4  0x000056268d6dc4b4 in g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int) ()
#6  0x00007f8fe3b8918b in ghost::Constraint::cost (this=<optimized out>) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/include/constraint.hpp:108
#7  ghost::Solver::simulate_local_move_cost (this=this@entry=0x7ffe17467cf0, variable=variable@entry=0x7f8fe2af8f60, value=<optimized out>, costConstraints=std::vector of length 7, capacity 7 = {...}, currentSatCost=currentSatCost@entry=1.8914956714925983) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:510
#8  0x00007f8fe3b8a068 in ghost::Solver::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:341
#9  0x00007f8fe3b8a53a in ghost::Solver::solve(double&, std::vector<int, std::allocator<int> >&, double, double, bool) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:155
#0  0x00007f8fe3b86c02 in ghost::Random::Random (other=..., this=0x56268dfbb330) at /usr/include/c++/8/ext/new_allocator.h:86
#1  ghost::Domain::Domain(ghost::Domain const&) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/domain.cpp:71
#2  0x00007f8fe3b875ba in ghost::Variable::Variable(ghost::Variable const&) () at /usr/include/c++/8/bits/basic_string.h:936
#3  0x000056268d6dc3b3 in std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > > std::transform<__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, __gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}) [clone .isra.44] ()
#4  0x000056268d6dc4b4 in g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int) ()
#6  0x00007f8fe3b8918b in ghost::Constraint::cost (this=<optimized out>) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/include/constraint.hpp:108
#7  ghost::Solver::simulate_local_move_cost (this=this@entry=0x7ffe17467cf0, variable=variable@entry=0x7f8fe2af8f60, value=<optimized out>, costConstraints=std::vector of length 7, capacity 7 = {...}, currentSatCost=currentSatCost@entry=1.8914956714925983) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:510
#8  0x00007f8fe3b8a068 in ghost::Solver::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:341
#9  0x00007f8fe3b8a53a in ghost::Solver::solve(double&, std::vector<int, std::allocator<int> >&, double, double, bool) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:155
0x00007f8fe3b86c02 in ghost::Random::Random (other=..., this=0x7ffe17460998) at /usr/include/c++/8/ext/new_allocator.h:86
#0  0x00007f8fe3b86c02 in ghost::Random::Random (other=..., this=0x7ffe17460998) at /usr/include/c++/8/ext/new_allocator.h:86
#1  ghost::Domain::Domain(ghost::Domain const&) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/domain.cpp:71
#2  0x00007f8fe3b875ba in ghost::Variable::Variable(ghost::Variable const&) () at /usr/include/c++/8/bits/basic_string.h:936
#3  0x000056268d6dc39b in std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > > std::transform<__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, __gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}) [clone .isra.44] ()
#4  0x000056268d6dc4b4 in g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int) ()
#6  0x00007f8fe3b8918b in ghost::Constraint::cost (this=<optimized out>) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/include/constraint.hpp:108
#7  ghost::Solver::simulate_local_move_cost (this=this@entry=0x7ffe17467cf0, variable=variable@entry=0x7f8fe2b00658, value=<optimized out>, costConstraints=std::vector of length 7, capacity 7 = {...}, currentSatCost=currentSatCost@entry=1.8914956714925983) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:510
#8  0x00007f8fe3b8a068 in ghost::Solver::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:341
#9  0x00007f8fe3b8a53a in ghost::Solver::solve(double&, std::vector<int, std::allocator<int> >&, double, double, bool) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:155
#0  0x00007f8fe3b86c02 in ghost::Random::Random (other=..., this=0x7ffe17460998) at /usr/include/c++/8/ext/new_allocator.h:86
#1  ghost::Domain::Domain(ghost::Domain const&) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/domain.cpp:71
#2  0x00007f8fe3b875ba in ghost::Variable::Variable(ghost::Variable const&) () at /usr/include/c++/8/bits/basic_string.h:936
#3  0x000056268d6dc39b in std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > > std::transform<__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, __gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}) [clone .isra.44] ()
#4  0x000056268d6dc4b4 in g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int) ()
#6  0x00007f8fe3b8918b in ghost::Constraint::cost (this=<optimized out>) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/include/constraint.hpp:108
#7  ghost::Solver::simulate_local_move_cost (this=this@entry=0x7ffe17467cf0, variable=variable@entry=0x7f8fe2b00658, value=<optimized out>, costConstraints=std::vector of length 7, capacity 7 = {...}, currentSatCost=currentSatCost@entry=1.8914956714925983) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:510
#8  0x00007f8fe3b8a068 in ghost::Solver::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:341
#9  0x00007f8fe3b8a53a in ghost::Solver::solve(double&, std::vector<int, std::allocator<int> >&, double, double, bool) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:155
#0  0x00007f8fe3b86c02 in ghost::Random::Random (other=..., this=0x7ffe17460998) at /usr/include/c++/8/ext/new_allocator.h:86
#1  ghost::Domain::Domain(ghost::Domain const&) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/domain.cpp:71
#2  0x00007f8fe3b875ba in ghost::Variable::Variable(ghost::Variable const&) () at /usr/include/c++/8/bits/basic_string.h:936
#3  0x000056268d6dc39b in std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > > std::transform<__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, __gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}) [clone .isra.44] ()
#4  0x000056268d6dc4b4 in g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int) ()
#6  0x00007f8fe3b8918b in ghost::Constraint::cost (this=<optimized out>) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/include/constraint.hpp:108
#7  ghost::Solver::simulate_local_move_cost (this=this@entry=0x7ffe17467cf0, variable=variable@entry=0x7f8fe2b00658, value=<optimized out>, costConstraints=std::vector of length 7, capacity 7 = {...}, currentSatCost=currentSatCost@entry=1.8914956714925983) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:510
#8  0x00007f8fe3b8a068 in ghost::Solver::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:341
#9  0x00007f8fe3b8a53a in ghost::Solver::solve(double&, std::vector<int, std::allocator<int> >&, double, double, bool) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:155
0x00007fbab9249c02 in ghost::Random::Random (other=..., this=0x558e0d96b530) at /usr/include/c++/8/ext/new_allocator.h:86
#0  0x00007fbab9249c02 in ghost::Random::Random (other=..., this=0x558e0d96b530) at /usr/include/c++/8/ext/new_allocator.h:86
#1  ghost::Domain::Domain(ghost::Domain const&) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/domain.cpp:71
#2  0x00007fbab924a5ba in ghost::Variable::Variable(ghost::Variable const&) () at /usr/include/c++/8/bits/basic_string.h:936
#3  0x0000558e0cb1b3b3 in std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > > std::transform<__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, __gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}) [clone .isra.44] ()
#4  0x0000558e0cb1b4b4 in g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int) ()
#6  0x00007fbab924b41a in ghost::Constraint::cost (this=<optimized out>) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/include/constraint.hpp:108
#7  ghost::Solver::compute_constraints_costs (this=this@entry=0x7ffdc84e4660, costConstraints=std::vector of length 7, capacity 7 = {...}) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:293
#8  0x00007fbab924d523 in ghost::Solver::solve(double&, std::vector<int, std::allocator<int> >&, double, double, bool) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:154
#0  0x00007fbab9249c02 in ghost::Random::Random (other=..., this=0x558e0d96b530) at /usr/include/c++/8/ext/new_allocator.h:86
#1  ghost::Domain::Domain(ghost::Domain const&) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/domain.cpp:71
#2  0x00007fbab924a5ba in ghost::Variable::Variable(ghost::Variable const&) () at /usr/include/c++/8/bits/basic_string.h:936
#3  0x0000558e0cb1b3b3 in std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > > std::transform<__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, __gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}) [clone .isra.44] ()
#4  0x0000558e0cb1b4b4 in g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int) ()
#6  0x00007fbab924b41a in ghost::Constraint::cost (this=<optimized out>) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/include/constraint.hpp:108
#7  ghost::Solver::compute_constraints_costs (this=this@entry=0x7ffdc84e4660, costConstraints=std::vector of length 7, capacity 7 = {...}) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:293
#8  0x00007fbab924d523 in ghost::Solver::solve(double&, std::vector<int, std::allocator<int> >&, double, double, bool) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:154
#0  0x00007fbab9249c02 in ghost::Random::Random (other=..., this=0x558e0d96b530) at /usr/include/c++/8/ext/new_allocator.h:86
#1  ghost::Domain::Domain(ghost::Domain const&) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/domain.cpp:71
#2  0x00007fbab924a5ba in ghost::Variable::Variable(ghost::Variable const&) () at /usr/include/c++/8/bits/basic_string.h:936
#3  0x0000558e0cb1b3b3 in std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > > std::transform<__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, __gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}) [clone .isra.44] ()
#4  0x0000558e0cb1b4b4 in g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int) ()
#6  0x00007fbab924b41a in ghost::Constraint::cost (this=<optimized out>) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/include/constraint.hpp:108
#7  ghost::Solver::compute_constraints_costs (this=this@entry=0x7ffdc84e4660, costConstraints=std::vector of length 7, capacity 7 = {...}) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:293
#8  0x00007fbab924d523 in ghost::Solver::solve(double&, std::vector<int, std::allocator<int> >&, double, double, bool) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:154
#2  0x0000558e0cb1b4fa in g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int) ()
#4  0x00007fbab924c18b in ghost::Constraint::cost (this=<optimized out>) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/include/constraint.hpp:108
#5  ghost::Solver::simulate_local_move_cost (this=this@entry=0x7ffdc84e4660, variable=variable@entry=0x7fbab81b7010, value=<optimized out>, costConstraints=std::vector of length 7, capacity 7 = {...}, currentSatCost=currentSatCost@entry=2.9413917703090062) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:510
#6  0x00007fbab924d068 in ghost::Solver::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:341
#7  0x00007fbab924d53a in ghost::Solver::solve(double&, std::vector<int, std::allocator<int> >&, double, double, bool) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:155
#2  0x0000558e0cb1b4fa in g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int) ()
#4  0x00007fbab924c18b in ghost::Constraint::cost (this=<optimized out>) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/include/constraint.hpp:108
#5  ghost::Solver::simulate_local_move_cost (this=this@entry=0x7ffdc84e4660, variable=variable@entry=0x7fbab81b7010, value=<optimized out>, costConstraints=std::vector of length 7, capacity 7 = {...}, currentSatCost=currentSatCost@entry=2.9413917703090062) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:510
#6  0x00007fbab924d068 in ghost::Solver::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:341
#7  0x00007fbab924d53a in ghost::Solver::solve(double&, std::vector<int, std::allocator<int> >&, double, double, bool) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:155
#2  0x0000558e0cb1b4fa in g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int) ()
#4  0x00007fbab924c18b in ghost::Constraint::cost (this=<optimized out>) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/include/constraint.hpp:108
#5  ghost::Solver::simulate_local_move_cost (this=this@entry=0x7ffdc84e4660, variable=variable@entry=0x7fbab81b7010, value=<optimized out>, costConstraints=std::vector of length 7, capacity 7 = {...}, currentSatCost=currentSatCost@entry=2.9413917703090062) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:510
#6  0x00007fbab924d068 in ghost::Solver::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:341
#7  0x00007fbab924d53a in ghost::Solver::solve(double&, std::vector<int, std::allocator<int> >&, double, double, bool) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:155
0x00007fbab924a5dc in ghost::Variable::Variable(ghost::Variable const&) () at /usr/include/c++/8/bits/basic_string.h:936
#0  0x00007fbab924a5dc in ghost::Variable::Variable(ghost::Variable const&) () at /usr/include/c++/8/bits/basic_string.h:936
#1  0x0000558e0cb1b724 in void std::vector<ghost::Variable, std::allocator<ghost::Variable> >::_M_realloc_insert<ghost::Variable>(__gnu_cxx::__normal_iterator<ghost::Variable*, std::vector<ghost::Variable, std::allocator<ghost::Variable> > >, ghost::Variable&&) ()
#2  0x0000558e0cb1b45e in std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > > std::transform<__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, __gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}) [clone .isra.44] ()
#3  0x0000558e0cb1b4b4 in g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int) ()
#5  0x00007fbab924c18b in ghost::Constraint::cost (this=<optimized out>) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/include/constraint.hpp:108
#6  ghost::Solver::simulate_local_move_cost (this=this@entry=0x7ffdc84e4660, variable=variable@entry=0x7fbab81b97b8, value=<optimized out>, costConstraints=std::vector of length 7, capacity 7 = {...}, currentSatCost=currentSatCost@entry=2.9413917703090062) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:510
#7  0x00007fbab924d068 in ghost::Solver::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:341
#8  0x00007fbab924d53a in ghost::Solver::solve(double&, std::vector<int, std::allocator<int> >&, double, double, bool) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:155
#0  0x00007fbab924a5dc in ghost::Variable::Variable(ghost::Variable const&) () at /usr/include/c++/8/bits/basic_string.h:936
#1  0x0000558e0cb1b724 in void std::vector<ghost::Variable, std::allocator<ghost::Variable> >::_M_realloc_insert<ghost::Variable>(__gnu_cxx::__normal_iterator<ghost::Variable*, std::vector<ghost::Variable, std::allocator<ghost::Variable> > >, ghost::Variable&&) ()
#2  0x0000558e0cb1b45e in std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > > std::transform<__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, __gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}) [clone .isra.44] ()
#3  0x0000558e0cb1b4b4 in g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int) ()
#5  0x00007fbab924c18b in ghost::Constraint::cost (this=<optimized out>) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/include/constraint.hpp:108
#6  ghost::Solver::simulate_local_move_cost (this=this@entry=0x7ffdc84e4660, variable=variable@entry=0x7fbab81b97b8, value=<optimized out>, costConstraints=std::vector of length 7, capacity 7 = {...}, currentSatCost=currentSatCost@entry=2.9413917703090062) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:510
#7  0x00007fbab924d068 in ghost::Solver::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:341
#8  0x00007fbab924d53a in ghost::Solver::solve(double&, std::vector<int, std::allocator<int> >&, double, double, bool) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:155
#0  0x00007fbab924a5dc in ghost::Variable::Variable(ghost::Variable const&) () at /usr/include/c++/8/bits/basic_string.h:936
#1  0x0000558e0cb1b724 in void std::vector<ghost::Variable, std::allocator<ghost::Variable> >::_M_realloc_insert<ghost::Variable>(__gnu_cxx::__normal_iterator<ghost::Variable*, std::vector<ghost::Variable, std::allocator<ghost::Variable> > >, ghost::Variable&&) ()
#2  0x0000558e0cb1b45e in std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > > std::transform<__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, __gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}) [clone .isra.44] ()
#3  0x0000558e0cb1b4b4 in g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int) ()
#5  0x00007fbab924c18b in ghost::Constraint::cost (this=<optimized out>) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/include/constraint.hpp:108
#6  ghost::Solver::simulate_local_move_cost (this=this@entry=0x7ffdc84e4660, variable=variable@entry=0x7fbab81b97b8, value=<optimized out>, costConstraints=std::vector of length 7, capacity 7 = {...}, currentSatCost=currentSatCost@entry=2.9413917703090062) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:510
#7  0x00007fbab924d068 in ghost::Solver::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:341
#8  0x00007fbab924d53a in ghost::Solver::solve(double&, std::vector<int, std::allocator<int> >&, double, double, bool) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:155
#2  ghost::Random::Random (other=..., this=0x558e0d8fe960) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/include/misc/random.hpp:78
#3  ghost::Domain::Domain(ghost::Domain const&) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/domain.cpp:71
#4  0x00007fbab924a5ba in ghost::Variable::Variable(ghost::Variable const&) () at /usr/include/c++/8/bits/basic_string.h:936
#5  0x0000558e0cb1b3b3 in std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > > std::transform<__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, __gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}) [clone .isra.44] ()
#6  0x0000558e0cb1b4b4 in g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int) ()
#8  0x00007fbab924c18b in ghost::Constraint::cost (this=<optimized out>) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/include/constraint.hpp:108
#9  ghost::Solver::simulate_local_move_cost (this=this@entry=0x7ffdc84e4660, variable=variable@entry=0x7fbab81c0eb0, value=<optimized out>, costConstraints=std::vector of length 7, capacity 7 = {...}, currentSatCost=currentSatCost@entry=2.9413917703090062) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:510
#10 0x00007fbab924d068 in ghost::Solver::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:341
#11 0x00007fbab924d53a in ghost::Solver::solve(double&, std::vector<int, std::allocator<int> >&, double, double, bool) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:155
#2  ghost::Random::Random (other=..., this=0x558e0d8fe960) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/include/misc/random.hpp:78
#3  ghost::Domain::Domain(ghost::Domain const&) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/domain.cpp:71
#4  0x00007fbab924a5ba in ghost::Variable::Variable(ghost::Variable const&) () at /usr/include/c++/8/bits/basic_string.h:936
#5  0x0000558e0cb1b3b3 in std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > > std::transform<__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, __gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}) [clone .isra.44] ()
#6  0x0000558e0cb1b4b4 in g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int) ()
#8  0x00007fbab924c18b in ghost::Constraint::cost (this=<optimized out>) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/include/constraint.hpp:108
#9  ghost::Solver::simulate_local_move_cost (this=this@entry=0x7ffdc84e4660, variable=variable@entry=0x7fbab81c0eb0, value=<optimized out>, costConstraints=std::vector of length 7, capacity 7 = {...}, currentSatCost=currentSatCost@entry=2.9413917703090062) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:510
#10 0x00007fbab924d068 in ghost::Solver::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:341
#11 0x00007fbab924d53a in ghost::Solver::solve(double&, std::vector<int, std::allocator<int> >&, double, double, bool) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:155
#2  ghost::Random::Random (other=..., this=0x558e0d8fe960) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/include/misc/random.hpp:78
#3  ghost::Domain::Domain(ghost::Domain const&) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/domain.cpp:71
#4  0x00007fbab924a5ba in ghost::Variable::Variable(ghost::Variable const&) () at /usr/include/c++/8/bits/basic_string.h:936
#5  0x0000558e0cb1b3b3 in std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > > std::transform<__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, __gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}) [clone .isra.44] ()
#6  0x0000558e0cb1b4b4 in g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int) ()
#8  0x00007fbab924c18b in ghost::Constraint::cost (this=<optimized out>) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/include/constraint.hpp:108
#9  ghost::Solver::simulate_local_move_cost (this=this@entry=0x7ffdc84e4660, variable=variable@entry=0x7fbab81c0eb0, value=<optimized out>, costConstraints=std::vector of length 7, capacity 7 = {...}, currentSatCost=currentSatCost@entry=2.9413917703090062) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:510
#10 0x00007fbab924d068 in ghost::Solver::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:341
#11 0x00007fbab924d53a in ghost::Solver::solve(double&, std::vector<int, std::allocator<int> >&, double, double, bool) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:155
0x00007f2922f8bc02 in ghost::Random::Random (other=..., this=0x555fba590020) at /usr/include/c++/8/ext/new_allocator.h:86
#0  0x00007f2922f8bc02 in ghost::Random::Random (other=..., this=0x555fba590020) at /usr/include/c++/8/ext/new_allocator.h:86
#1  ghost::Domain::Domain(ghost::Domain const&) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/domain.cpp:71
#2  0x00007f2922f8c5ba in ghost::Variable::Variable(ghost::Variable const&) () at /usr/include/c++/8/bits/basic_string.h:936
#3  0x0000555fb87733b3 in std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > > std::transform<__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, __gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}) [clone .isra.44] ()
#4  0x0000555fb87734b4 in g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int) ()
#6  0x00007f2922f8d41a in ghost::Constraint::cost (this=<optimized out>) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/include/constraint.hpp:108
#7  ghost::Solver::compute_constraints_costs (this=this@entry=0x7fff78f5bfd0, costConstraints=std::vector of length 7, capacity 7 = {...}) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:293
#8  0x00007f2922f8f523 in ghost::Solver::solve(double&, std::vector<int, std::allocator<int> >&, double, double, bool) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:154
#0  0x00007f2922f8bc02 in ghost::Random::Random (other=..., this=0x555fba590020) at /usr/include/c++/8/ext/new_allocator.h:86
#1  ghost::Domain::Domain(ghost::Domain const&) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/domain.cpp:71
#2  0x00007f2922f8c5ba in ghost::Variable::Variable(ghost::Variable const&) () at /usr/include/c++/8/bits/basic_string.h:936
#3  0x0000555fb87733b3 in std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > > std::transform<__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, __gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}) [clone .isra.44] ()
#4  0x0000555fb87734b4 in g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int) ()
#6  0x00007f2922f8d41a in ghost::Constraint::cost (this=<optimized out>) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/include/constraint.hpp:108
#7  ghost::Solver::compute_constraints_costs (this=this@entry=0x7fff78f5bfd0, costConstraints=std::vector of length 7, capacity 7 = {...}) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:293
#8  0x00007f2922f8f523 in ghost::Solver::solve(double&, std::vector<int, std::allocator<int> >&, double, double, bool) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:154
#0  0x00007f2922f8bc02 in ghost::Random::Random (other=..., this=0x555fba590020) at /usr/include/c++/8/ext/new_allocator.h:86
#1  ghost::Domain::Domain(ghost::Domain const&) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/domain.cpp:71
#2  0x00007f2922f8c5ba in ghost::Variable::Variable(ghost::Variable const&) () at /usr/include/c++/8/bits/basic_string.h:936
#3  0x0000555fb87733b3 in std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > > std::transform<__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, __gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}) [clone .isra.44] ()
#4  0x0000555fb87734b4 in g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int) ()
#6  0x00007f2922f8d41a in ghost::Constraint::cost (this=<optimized out>) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/include/constraint.hpp:108
#7  ghost::Solver::compute_constraints_costs (this=this@entry=0x7fff78f5bfd0, costConstraints=std::vector of length 7, capacity 7 = {...}) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:293
#8  0x00007f2922f8f523 in ghost::Solver::solve(double&, std::vector<int, std::allocator<int> >&, double, double, bool) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:154
0x00007f2922f8bc02 in ghost::Random::Random (other=..., this=0x555fba3d9b88) at /usr/include/c++/8/ext/new_allocator.h:86
#0  0x00007f2922f8bc02 in ghost::Random::Random (other=..., this=0x555fba3d9b88) at /usr/include/c++/8/ext/new_allocator.h:86
#1  ghost::Domain::Domain(ghost::Domain const&) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/domain.cpp:71
#2  0x00007f2922f8c5ba in ghost::Variable::Variable(ghost::Variable const&) () at /usr/include/c++/8/bits/basic_string.h:936
#3  0x0000555fb87733b3 in std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > > std::transform<__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, __gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}) [clone .isra.44] ()
#4  0x0000555fb87734b4 in g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int) ()
#6  0x00007f2922f8e18b in ghost::Constraint::cost (this=<optimized out>) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/include/constraint.hpp:108
#7  ghost::Solver::simulate_local_move_cost (this=this@entry=0x7fff78f5bfd0, variable=variable@entry=0x7f2921efb7b8, value=<optimized out>, costConstraints=std::vector of length 7, capacity 7 = {...}, currentSatCost=currentSatCost@entry=4.2155774388013993) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:510
#8  0x00007f2922f8f068 in ghost::Solver::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:341
#9  0x00007f2922f8f53a in ghost::Solver::solve(double&, std::vector<int, std::allocator<int> >&, double, double, bool) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:155
#0  0x00007f2922f8bc02 in ghost::Random::Random (other=..., this=0x555fba3d9b88) at /usr/include/c++/8/ext/new_allocator.h:86
#1  ghost::Domain::Domain(ghost::Domain const&) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/domain.cpp:71
#2  0x00007f2922f8c5ba in ghost::Variable::Variable(ghost::Variable const&) () at /usr/include/c++/8/bits/basic_string.h:936
#3  0x0000555fb87733b3 in std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > > std::transform<__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, __gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}) [clone .isra.44] ()
#4  0x0000555fb87734b4 in g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int) ()
#6  0x00007f2922f8e18b in ghost::Constraint::cost (this=<optimized out>) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/include/constraint.hpp:108
#7  ghost::Solver::simulate_local_move_cost (this=this@entry=0x7fff78f5bfd0, variable=variable@entry=0x7f2921efb7b8, value=<optimized out>, costConstraints=std::vector of length 7, capacity 7 = {...}, currentSatCost=currentSatCost@entry=4.2155774388013993) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:510
#8  0x00007f2922f8f068 in ghost::Solver::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:341
#9  0x00007f2922f8f53a in ghost::Solver::solve(double&, std::vector<int, std::allocator<int> >&, double, double, bool) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:155
#0  0x00007f2922f8bc02 in ghost::Random::Random (other=..., this=0x555fba3d9b88) at /usr/include/c++/8/ext/new_allocator.h:86
#1  ghost::Domain::Domain(ghost::Domain const&) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/domain.cpp:71
#2  0x00007f2922f8c5ba in ghost::Variable::Variable(ghost::Variable const&) () at /usr/include/c++/8/bits/basic_string.h:936
#3  0x0000555fb87733b3 in std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > > std::transform<__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, __gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}) [clone .isra.44] ()
#4  0x0000555fb87734b4 in g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int) ()
#6  0x00007f2922f8e18b in ghost::Constraint::cost (this=<optimized out>) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/include/constraint.hpp:108
#7  ghost::Solver::simulate_local_move_cost (this=this@entry=0x7fff78f5bfd0, variable=variable@entry=0x7f2921efb7b8, value=<optimized out>, costConstraints=std::vector of length 7, capacity 7 = {...}, currentSatCost=currentSatCost@entry=4.2155774388013993) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:510
#8  0x00007f2922f8f068 in ghost::Solver::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:341
#9  0x00007f2922f8f53a in ghost::Solver::solve(double&, std::vector<int, std::allocator<int> >&, double, double, bool) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:155
#9  ghost::Domain::Domain(ghost::Domain const&) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/domain.cpp:71
#10 0x00007f2922f8c5ba in ghost::Variable::Variable(ghost::Variable const&) () at /usr/include/c++/8/bits/basic_string.h:936
#11 0x0000555fb877339b in std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > > std::transform<__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, __gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}) [clone .isra.44] ()
#12 0x0000555fb87734b4 in g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int) ()
#14 0x00007f2922f8e18b in ghost::Constraint::cost (this=<optimized out>) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/include/constraint.hpp:108
#15 ghost::Solver::simulate_local_move_cost (this=this@entry=0x7fff78f5bfd0, variable=variable@entry=0x7f2921efdf60, value=<optimized out>, costConstraints=std::vector of length 7, capacity 7 = {...}, currentSatCost=currentSatCost@entry=4.2155774388013993) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:510
#16 0x00007f2922f8f068 in ghost::Solver::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:341
#17 0x00007f2922f8f53a in ghost::Solver::solve(double&, std::vector<int, std::allocator<int> >&, double, double, bool) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:155
#9  ghost::Domain::Domain(ghost::Domain const&) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/domain.cpp:71
#10 0x00007f2922f8c5ba in ghost::Variable::Variable(ghost::Variable const&) () at /usr/include/c++/8/bits/basic_string.h:936
#11 0x0000555fb877339b in std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > > std::transform<__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, __gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}) [clone .isra.44] ()
#12 0x0000555fb87734b4 in g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int) ()
#14 0x00007f2922f8e18b in ghost::Constraint::cost (this=<optimized out>) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/include/constraint.hpp:108
#15 ghost::Solver::simulate_local_move_cost (this=this@entry=0x7fff78f5bfd0, variable=variable@entry=0x7f2921efdf60, value=<optimized out>, costConstraints=std::vector of length 7, capacity 7 = {...}, currentSatCost=currentSatCost@entry=4.2155774388013993) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:510
#16 0x00007f2922f8f068 in ghost::Solver::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:341
#17 0x00007f2922f8f53a in ghost::Solver::solve(double&, std::vector<int, std::allocator<int> >&, double, double, bool) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:155
#9  ghost::Domain::Domain(ghost::Domain const&) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/domain.cpp:71
#10 0x00007f2922f8c5ba in ghost::Variable::Variable(ghost::Variable const&) () at /usr/include/c++/8/bits/basic_string.h:936
#11 0x0000555fb877339b in std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > > std::transform<__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, __gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}) [clone .isra.44] ()
#12 0x0000555fb87734b4 in g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int) ()
#14 0x00007f2922f8e18b in ghost::Constraint::cost (this=<optimized out>) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/include/constraint.hpp:108
#15 ghost::Solver::simulate_local_move_cost (this=this@entry=0x7fff78f5bfd0, variable=variable@entry=0x7f2921efdf60, value=<optimized out>, costConstraints=std::vector of length 7, capacity 7 = {...}, currentSatCost=currentSatCost@entry=4.2155774388013993) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:510
#16 0x00007f2922f8f068 in ghost::Solver::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:341
#17 0x00007f2922f8f53a in ghost::Solver::solve(double&, std::vector<int, std::allocator<int> >&, double, double, bool) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:155
#9  ghost::Domain::Domain(ghost::Domain const&) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/domain.cpp:71
#10 0x00007f2922f8c5ba in ghost::Variable::Variable(ghost::Variable const&) () at /usr/include/c++/8/bits/basic_string.h:936
#11 0x0000555fb877339b in std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > > std::transform<__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, __gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}) [clone .isra.44] ()
#12 0x0000555fb87734b4 in g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int) ()
#14 0x00007f2922f8e18b in ghost::Constraint::cost (this=<optimized out>) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/include/constraint.hpp:108
#15 ghost::Solver::simulate_local_move_cost (this=this@entry=0x7fff78f5bfd0, variable=variable@entry=0x7f2921f02eb0, value=<optimized out>, costConstraints=std::vector of length 7, capacity 7 = {...}, currentSatCost=currentSatCost@entry=4.2155774388013993) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:510
#16 0x00007f2922f8f068 in ghost::Solver::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:341
#17 0x00007f2922f8f53a in ghost::Solver::solve(double&, std::vector<int, std::allocator<int> >&, double, double, bool) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:155
#9  ghost::Domain::Domain(ghost::Domain const&) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/domain.cpp:71
#10 0x00007f2922f8c5ba in ghost::Variable::Variable(ghost::Variable const&) () at /usr/include/c++/8/bits/basic_string.h:936
#11 0x0000555fb877339b in std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > > std::transform<__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, __gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}) [clone .isra.44] ()
#12 0x0000555fb87734b4 in g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int) ()
#14 0x00007f2922f8e18b in ghost::Constraint::cost (this=<optimized out>) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/include/constraint.hpp:108
#15 ghost::Solver::simulate_local_move_cost (this=this@entry=0x7fff78f5bfd0, variable=variable@entry=0x7f2921f02eb0, value=<optimized out>, costConstraints=std::vector of length 7, capacity 7 = {...}, currentSatCost=currentSatCost@entry=4.2155774388013993) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:510
#16 0x00007f2922f8f068 in ghost::Solver::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:341
#17 0x00007f2922f8f53a in ghost::Solver::solve(double&, std::vector<int, std::allocator<int> >&, double, double, bool) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:155
#9  ghost::Domain::Domain(ghost::Domain const&) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/domain.cpp:71
#10 0x00007f2922f8c5ba in ghost::Variable::Variable(ghost::Variable const&) () at /usr/include/c++/8/bits/basic_string.h:936
#11 0x0000555fb877339b in std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > > std::transform<__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, __gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}) [clone .isra.44] ()
#12 0x0000555fb87734b4 in g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int) ()
#14 0x00007f2922f8e18b in ghost::Constraint::cost (this=<optimized out>) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/include/constraint.hpp:108
#15 ghost::Solver::simulate_local_move_cost (this=this@entry=0x7fff78f5bfd0, variable=variable@entry=0x7f2921f02eb0, value=<optimized out>, costConstraints=std::vector of length 7, capacity 7 = {...}, currentSatCost=currentSatCost@entry=4.2155774388013993) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:510
#16 0x00007f2922f8f068 in ghost::Solver::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:341
#17 0x00007f2922f8f53a in ghost::Solver::solve(double&, std::vector<int, std::allocator<int> >&, double, double, bool) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:155
0x00007feb035abc02 in ghost::Random::Random (other=..., this=0x55c27c34f0a0) at /usr/include/c++/8/ext/new_allocator.h:86
#0  0x00007feb035abc02 in ghost::Random::Random (other=..., this=0x55c27c34f0a0) at /usr/include/c++/8/ext/new_allocator.h:86
#1  ghost::Domain::Domain(ghost::Domain const&) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/domain.cpp:71
#2  0x00007feb035ac5ba in ghost::Variable::Variable(ghost::Variable const&) () at /usr/include/c++/8/bits/basic_string.h:936
#3  0x000055c27a11c743 in void std::vector<ghost::Variable, std::allocator<ghost::Variable> >::_M_realloc_insert<ghost::Variable>(__gnu_cxx::__normal_iterator<ghost::Variable*, std::vector<ghost::Variable, std::allocator<ghost::Variable> > >, ghost::Variable&&) ()
#4  0x000055c27a11c45e in std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > > std::transform<__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, __gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}) [clone .isra.44] ()
#5  0x000055c27a11c4b4 in g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int) ()
#7  0x00007feb035ad41a in ghost::Constraint::cost (this=<optimized out>) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/include/constraint.hpp:108
#8  ghost::Solver::compute_constraints_costs (this=this@entry=0x7ffd9422cd10, costConstraints=std::vector of length 7, capacity 7 = {...}) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:293
#9  0x00007feb035af523 in ghost::Solver::solve(double&, std::vector<int, std::allocator<int> >&, double, double, bool) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:154
#0  0x00007feb035abc02 in ghost::Random::Random (other=..., this=0x55c27c34f0a0) at /usr/include/c++/8/ext/new_allocator.h:86
#1  ghost::Domain::Domain(ghost::Domain const&) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/domain.cpp:71
#2  0x00007feb035ac5ba in ghost::Variable::Variable(ghost::Variable const&) () at /usr/include/c++/8/bits/basic_string.h:936
#3  0x000055c27a11c743 in void std::vector<ghost::Variable, std::allocator<ghost::Variable> >::_M_realloc_insert<ghost::Variable>(__gnu_cxx::__normal_iterator<ghost::Variable*, std::vector<ghost::Variable, std::allocator<ghost::Variable> > >, ghost::Variable&&) ()
#4  0x000055c27a11c45e in std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > > std::transform<__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, __gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}) [clone .isra.44] ()
#5  0x000055c27a11c4b4 in g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int) ()
#7  0x00007feb035ad41a in ghost::Constraint::cost (this=<optimized out>) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/include/constraint.hpp:108
#8  ghost::Solver::compute_constraints_costs (this=this@entry=0x7ffd9422cd10, costConstraints=std::vector of length 7, capacity 7 = {...}) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:293
#9  0x00007feb035af523 in ghost::Solver::solve(double&, std::vector<int, std::allocator<int> >&, double, double, bool) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:154
#0  0x00007feb035abc02 in ghost::Random::Random (other=..., this=0x55c27c34f0a0) at /usr/include/c++/8/ext/new_allocator.h:86
#1  ghost::Domain::Domain(ghost::Domain const&) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/domain.cpp:71
#2  0x00007feb035ac5ba in ghost::Variable::Variable(ghost::Variable const&) () at /usr/include/c++/8/bits/basic_string.h:936
#3  0x000055c27a11c743 in void std::vector<ghost::Variable, std::allocator<ghost::Variable> >::_M_realloc_insert<ghost::Variable>(__gnu_cxx::__normal_iterator<ghost::Variable*, std::vector<ghost::Variable, std::allocator<ghost::Variable> > >, ghost::Variable&&) ()
#4  0x000055c27a11c45e in std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > > std::transform<__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, __gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}) [clone .isra.44] ()
#5  0x000055c27a11c4b4 in g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int) ()
#7  0x00007feb035ad41a in ghost::Constraint::cost (this=<optimized out>) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/include/constraint.hpp:108
#8  ghost::Solver::compute_constraints_costs (this=this@entry=0x7ffd9422cd10, costConstraints=std::vector of length 7, capacity 7 = {...}) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:293
#9  0x00007feb035af523 in ghost::Solver::solve(double&, std::vector<int, std::allocator<int> >&, double, double, bool) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:154
0x00007feb035abc02 in ghost::Random::Random (other=..., this=0x55c27c1fe450) at /usr/include/c++/8/ext/new_allocator.h:86
#0  0x00007feb035abc02 in ghost::Random::Random (other=..., this=0x55c27c1fe450) at /usr/include/c++/8/ext/new_allocator.h:86
#1  ghost::Domain::Domain(ghost::Domain const&) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/domain.cpp:71
#2  0x00007feb035ac5ba in ghost::Variable::Variable(ghost::Variable const&) () at /usr/include/c++/8/bits/basic_string.h:936
#3  0x000055c27a11c743 in void std::vector<ghost::Variable, std::allocator<ghost::Variable> >::_M_realloc_insert<ghost::Variable>(__gnu_cxx::__normal_iterator<ghost::Variable*, std::vector<ghost::Variable, std::allocator<ghost::Variable> > >, ghost::Variable&&) ()
#4  0x000055c27a11c45e in std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > > std::transform<__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, __gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}) [clone .isra.44] ()
#5  0x000055c27a11c4b4 in g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int) ()
#7  0x00007feb035ae18b in ghost::Constraint::cost (this=<optimized out>) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/include/constraint.hpp:108
#8  ghost::Solver::simulate_local_move_cost (this=this@entry=0x7ffd9422cd10, variable=variable@entry=0x7feb0251b7b8, value=<optimized out>, costConstraints=std::vector of length 7, capacity 7 = {...}, currentSatCost=currentSatCost@entry=4.233208511739214) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:510
#9  0x00007feb035af068 in ghost::Solver::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:341
#10 0x00007feb035af53a in ghost::Solver::solve(double&, std::vector<int, std::allocator<int> >&, double, double, bool) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:155
#0  0x00007feb035abc02 in ghost::Random::Random (other=..., this=0x55c27c1fe450) at /usr/include/c++/8/ext/new_allocator.h:86
#1  ghost::Domain::Domain(ghost::Domain const&) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/domain.cpp:71
#2  0x00007feb035ac5ba in ghost::Variable::Variable(ghost::Variable const&) () at /usr/include/c++/8/bits/basic_string.h:936
#3  0x000055c27a11c743 in void std::vector<ghost::Variable, std::allocator<ghost::Variable> >::_M_realloc_insert<ghost::Variable>(__gnu_cxx::__normal_iterator<ghost::Variable*, std::vector<ghost::Variable, std::allocator<ghost::Variable> > >, ghost::Variable&&) ()
#4  0x000055c27a11c45e in std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > > std::transform<__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, __gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}) [clone .isra.44] ()
#5  0x000055c27a11c4b4 in g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int) ()
#7  0x00007feb035ae18b in ghost::Constraint::cost (this=<optimized out>) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/include/constraint.hpp:108
#8  ghost::Solver::simulate_local_move_cost (this=this@entry=0x7ffd9422cd10, variable=variable@entry=0x7feb0251b7b8, value=<optimized out>, costConstraints=std::vector of length 7, capacity 7 = {...}, currentSatCost=currentSatCost@entry=4.233208511739214) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:510
#9  0x00007feb035af068 in ghost::Solver::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:341
#10 0x00007feb035af53a in ghost::Solver::solve(double&, std::vector<int, std::allocator<int> >&, double, double, bool) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:155
#0  0x00007feb035abc02 in ghost::Random::Random (other=..., this=0x55c27c1fe450) at /usr/include/c++/8/ext/new_allocator.h:86
#1  ghost::Domain::Domain(ghost::Domain const&) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/domain.cpp:71
#2  0x00007feb035ac5ba in ghost::Variable::Variable(ghost::Variable const&) () at /usr/include/c++/8/bits/basic_string.h:936
#3  0x000055c27a11c743 in void std::vector<ghost::Variable, std::allocator<ghost::Variable> >::_M_realloc_insert<ghost::Variable>(__gnu_cxx::__normal_iterator<ghost::Variable*, std::vector<ghost::Variable, std::allocator<ghost::Variable> > >, ghost::Variable&&) ()
#4  0x000055c27a11c45e in std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > > std::transform<__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, __gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}) [clone .isra.44] ()
#5  0x000055c27a11c4b4 in g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int) ()
#7  0x00007feb035ae18b in ghost::Constraint::cost (this=<optimized out>) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/include/constraint.hpp:108
#8  ghost::Solver::simulate_local_move_cost (this=this@entry=0x7ffd9422cd10, variable=variable@entry=0x7feb0251b7b8, value=<optimized out>, costConstraints=std::vector of length 7, capacity 7 = {...}, currentSatCost=currentSatCost@entry=4.233208511739214) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:510
#9  0x00007feb035af068 in ghost::Solver::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:341
#10 0x00007feb035af53a in ghost::Solver::solve(double&, std::vector<int, std::allocator<int> >&, double, double, bool) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:155
#6  0x000055c27a11c54a in g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int) ()
#8  0x00007feb035ae18b in ghost::Constraint::cost (this=<optimized out>) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/include/constraint.hpp:108
#9  ghost::Solver::simulate_local_move_cost (this=this@entry=0x7ffd9422cd10, variable=variable@entry=0x7feb0251df60, value=<optimized out>, costConstraints=std::vector of length 7, capacity 7 = {...}, currentSatCost=currentSatCost@entry=4.233208511739214) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:510
#10 0x00007feb035af068 in ghost::Solver::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:341
#11 0x00007feb035af53a in ghost::Solver::solve(double&, std::vector<int, std::allocator<int> >&, double, double, bool) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:155
#6  0x000055c27a11c54a in g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int) ()
#8  0x00007feb035ae18b in ghost::Constraint::cost (this=<optimized out>) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/include/constraint.hpp:108
#9  ghost::Solver::simulate_local_move_cost (this=this@entry=0x7ffd9422cd10, variable=variable@entry=0x7feb0251df60, value=<optimized out>, costConstraints=std::vector of length 7, capacity 7 = {...}, currentSatCost=currentSatCost@entry=4.233208511739214) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:510
#10 0x00007feb035af068 in ghost::Solver::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:341
#11 0x00007feb035af53a in ghost::Solver::solve(double&, std::vector<int, std::allocator<int> >&, double, double, bool) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:155
#6  0x000055c27a11c54a in g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int) ()
#8  0x00007feb035ae18b in ghost::Constraint::cost (this=<optimized out>) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/include/constraint.hpp:108
#9  ghost::Solver::simulate_local_move_cost (this=this@entry=0x7ffd9422cd10, variable=variable@entry=0x7feb0251df60, value=<optimized out>, costConstraints=std::vector of length 7, capacity 7 = {...}, currentSatCost=currentSatCost@entry=4.233208511739214) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:510
#10 0x00007feb035af068 in ghost::Solver::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:341
#11 0x00007feb035af53a in ghost::Solver::solve(double&, std::vector<int, std::allocator<int> >&, double, double, bool) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:155
0x00007feb035abc02 in ghost::Random::Random (other=..., this=0x55c27c383828) at /usr/include/c++/8/ext/new_allocator.h:86
#0  0x00007feb035abc02 in ghost::Random::Random (other=..., this=0x55c27c383828) at /usr/include/c++/8/ext/new_allocator.h:86
#1  ghost::Domain::Domain(ghost::Domain const&) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/domain.cpp:71
#2  0x00007feb035ac5ba in ghost::Variable::Variable(ghost::Variable const&) () at /usr/include/c++/8/bits/basic_string.h:936
#3  0x000055c27a11c743 in void std::vector<ghost::Variable, std::allocator<ghost::Variable> >::_M_realloc_insert<ghost::Variable>(__gnu_cxx::__normal_iterator<ghost::Variable*, std::vector<ghost::Variable, std::allocator<ghost::Variable> > >, ghost::Variable&&) ()
#4  0x000055c27a11c45e in std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > > std::transform<__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, __gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}) [clone .isra.44] ()
#5  0x000055c27a11c4b4 in g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int) ()
#7  0x00007feb035ae18b in ghost::Constraint::cost (this=<optimized out>) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/include/constraint.hpp:108
#8  ghost::Solver::simulate_local_move_cost (this=this@entry=0x7ffd9422cd10, variable=variable@entry=0x7feb02520708, value=<optimized out>, costConstraints=std::vector of length 7, capacity 7 = {...}, currentSatCost=currentSatCost@entry=4.233208511739214) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:510
#9  0x00007feb035af068 in ghost::Solver::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:341
#10 0x00007feb035af53a in ghost::Solver::solve(double&, std::vector<int, std::allocator<int> >&, double, double, bool) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:155
#0  0x00007feb035abc02 in ghost::Random::Random (other=..., this=0x55c27c383828) at /usr/include/c++/8/ext/new_allocator.h:86
#1  ghost::Domain::Domain(ghost::Domain const&) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/domain.cpp:71
#2  0x00007feb035ac5ba in ghost::Variable::Variable(ghost::Variable const&) () at /usr/include/c++/8/bits/basic_string.h:936
#3  0x000055c27a11c743 in void std::vector<ghost::Variable, std::allocator<ghost::Variable> >::_M_realloc_insert<ghost::Variable>(__gnu_cxx::__normal_iterator<ghost::Variable*, std::vector<ghost::Variable, std::allocator<ghost::Variable> > >, ghost::Variable&&) ()
#4  0x000055c27a11c45e in std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > > std::transform<__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, __gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}) [clone .isra.44] ()
#5  0x000055c27a11c4b4 in g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int) ()
#7  0x00007feb035ae18b in ghost::Constraint::cost (this=<optimized out>) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/include/constraint.hpp:108
#8  ghost::Solver::simulate_local_move_cost (this=this@entry=0x7ffd9422cd10, variable=variable@entry=0x7feb02520708, value=<optimized out>, costConstraints=std::vector of length 7, capacity 7 = {...}, currentSatCost=currentSatCost@entry=4.233208511739214) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:510
#9  0x00007feb035af068 in ghost::Solver::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:341
#10 0x00007feb035af53a in ghost::Solver::solve(double&, std::vector<int, std::allocator<int> >&, double, double, bool) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:155
#0  0x00007feb035abc02 in ghost::Random::Random (other=..., this=0x55c27c383828) at /usr/include/c++/8/ext/new_allocator.h:86
#1  ghost::Domain::Domain(ghost::Domain const&) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/domain.cpp:71
#2  0x00007feb035ac5ba in ghost::Variable::Variable(ghost::Variable const&) () at /usr/include/c++/8/bits/basic_string.h:936
#3  0x000055c27a11c743 in void std::vector<ghost::Variable, std::allocator<ghost::Variable> >::_M_realloc_insert<ghost::Variable>(__gnu_cxx::__normal_iterator<ghost::Variable*, std::vector<ghost::Variable, std::allocator<ghost::Variable> > >, ghost::Variable&&) ()
#4  0x000055c27a11c45e in std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > > std::transform<__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, __gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}) [clone .isra.44] ()
#5  0x000055c27a11c4b4 in g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int) ()
#7  0x00007feb035ae18b in ghost::Constraint::cost (this=<optimized out>) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/include/constraint.hpp:108
#8  ghost::Solver::simulate_local_move_cost (this=this@entry=0x7ffd9422cd10, variable=variable@entry=0x7feb02520708, value=<optimized out>, costConstraints=std::vector of length 7, capacity 7 = {...}, currentSatCost=currentSatCost@entry=4.233208511739214) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:510
#9  0x00007feb035af068 in ghost::Solver::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:341
#10 0x00007feb035af53a in ghost::Solver::solve(double&, std::vector<int, std::allocator<int> >&, double, double, bool) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:155
0x00007f166112ac02 in ghost::Random::Random (other=..., this=0x55772e3ba298) at /usr/include/c++/8/ext/new_allocator.h:86
#0  0x00007f166112ac02 in ghost::Random::Random (other=..., this=0x55772e3ba298) at /usr/include/c++/8/ext/new_allocator.h:86
#1  ghost::Domain::Domain(ghost::Domain const&) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/domain.cpp:71
#2  0x00007f166112b5ba in ghost::Variable::Variable(ghost::Variable const&) () at /usr/include/c++/8/bits/basic_string.h:936
#3  0x000055772c2b7743 in void std::vector<ghost::Variable, std::allocator<ghost::Variable> >::_M_realloc_insert<ghost::Variable>(__gnu_cxx::__normal_iterator<ghost::Variable*, std::vector<ghost::Variable, std::allocator<ghost::Variable> > >, ghost::Variable&&) ()
#4  0x000055772c2b745e in std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > > std::transform<__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, __gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}) [clone .isra.44] ()
#5  0x000055772c2b74b4 in g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int) ()
#7  0x00007f166112c41a in ghost::Constraint::cost (this=<optimized out>) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/include/constraint.hpp:108
#8  ghost::Solver::compute_constraints_costs (this=this@entry=0x7ffe4734f6b0, costConstraints=std::vector of length 7, capacity 7 = {...}) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:293
#9  0x00007f166112e523 in ghost::Solver::solve(double&, std::vector<int, std::allocator<int> >&, double, double, bool) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:154
#0  0x00007f166112ac02 in ghost::Random::Random (other=..., this=0x55772e3ba298) at /usr/include/c++/8/ext/new_allocator.h:86
#1  ghost::Domain::Domain(ghost::Domain const&) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/domain.cpp:71
#2  0x00007f166112b5ba in ghost::Variable::Variable(ghost::Variable const&) () at /usr/include/c++/8/bits/basic_string.h:936
#3  0x000055772c2b7743 in void std::vector<ghost::Variable, std::allocator<ghost::Variable> >::_M_realloc_insert<ghost::Variable>(__gnu_cxx::__normal_iterator<ghost::Variable*, std::vector<ghost::Variable, std::allocator<ghost::Variable> > >, ghost::Variable&&) ()
#4  0x000055772c2b745e in std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > > std::transform<__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, __gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}) [clone .isra.44] ()
#5  0x000055772c2b74b4 in g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int) ()
#7  0x00007f166112c41a in ghost::Constraint::cost (this=<optimized out>) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/include/constraint.hpp:108
#8  ghost::Solver::compute_constraints_costs (this=this@entry=0x7ffe4734f6b0, costConstraints=std::vector of length 7, capacity 7 = {...}) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:293
#9  0x00007f166112e523 in ghost::Solver::solve(double&, std::vector<int, std::allocator<int> >&, double, double, bool) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:154
#0  0x00007f166112ac02 in ghost::Random::Random (other=..., this=0x55772e3ba298) at /usr/include/c++/8/ext/new_allocator.h:86
#1  ghost::Domain::Domain(ghost::Domain const&) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/domain.cpp:71
#2  0x00007f166112b5ba in ghost::Variable::Variable(ghost::Variable const&) () at /usr/include/c++/8/bits/basic_string.h:936
#3  0x000055772c2b7743 in void std::vector<ghost::Variable, std::allocator<ghost::Variable> >::_M_realloc_insert<ghost::Variable>(__gnu_cxx::__normal_iterator<ghost::Variable*, std::vector<ghost::Variable, std::allocator<ghost::Variable> > >, ghost::Variable&&) ()
#4  0x000055772c2b745e in std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > > std::transform<__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, __gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}) [clone .isra.44] ()
#5  0x000055772c2b74b4 in g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int) ()
#7  0x00007f166112c41a in ghost::Constraint::cost (this=<optimized out>) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/include/constraint.hpp:108
#8  ghost::Solver::compute_constraints_costs (this=this@entry=0x7ffe4734f6b0, costConstraints=std::vector of length 7, capacity 7 = {...}) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:293
#9  0x00007f166112e523 in ghost::Solver::solve(double&, std::vector<int, std::allocator<int> >&, double, double, bool) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:154
#9  ghost::Domain::Domain(ghost::Domain const&) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/domain.cpp:71
#10 0x00007f166112b5ba in ghost::Variable::Variable(ghost::Variable const&) () at /usr/include/c++/8/bits/basic_string.h:936
#11 0x000055772c2b7743 in void std::vector<ghost::Variable, std::allocator<ghost::Variable> >::_M_realloc_insert<ghost::Variable>(__gnu_cxx::__normal_iterator<ghost::Variable*, std::vector<ghost::Variable, std::allocator<ghost::Variable> > >, ghost::Variable&&) ()
#12 0x000055772c2b745e in std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > > std::transform<__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, __gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}) [clone .isra.44] ()
#13 0x000055772c2b74b4 in g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int) ()
#15 0x00007f166112d18b in ghost::Constraint::cost (this=<optimized out>) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/include/constraint.hpp:108
#16 ghost::Solver::simulate_local_move_cost (this=this@entry=0x7ffe4734f6b0, variable=variable@entry=0x7f1660098010, value=<optimized out>, costConstraints=std::vector of length 7, capacity 7 = {...}, currentSatCost=currentSatCost@entry=4.6806782036844279) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:510
#17 0x00007f166112e068 in ghost::Solver::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:341
#18 0x00007f166112e53a in ghost::Solver::solve(double&, std::vector<int, std::allocator<int> >&, double, double, bool) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:155
#9  ghost::Domain::Domain(ghost::Domain const&) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/domain.cpp:71
#10 0x00007f166112b5ba in ghost::Variable::Variable(ghost::Variable const&) () at /usr/include/c++/8/bits/basic_string.h:936
#11 0x000055772c2b7743 in void std::vector<ghost::Variable, std::allocator<ghost::Variable> >::_M_realloc_insert<ghost::Variable>(__gnu_cxx::__normal_iterator<ghost::Variable*, std::vector<ghost::Variable, std::allocator<ghost::Variable> > >, ghost::Variable&&) ()
#12 0x000055772c2b745e in std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > > std::transform<__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, __gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}) [clone .isra.44] ()
#13 0x000055772c2b74b4 in g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int) ()
#15 0x00007f166112d18b in ghost::Constraint::cost (this=<optimized out>) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/include/constraint.hpp:108
#16 ghost::Solver::simulate_local_move_cost (this=this@entry=0x7ffe4734f6b0, variable=variable@entry=0x7f1660098010, value=<optimized out>, costConstraints=std::vector of length 7, capacity 7 = {...}, currentSatCost=currentSatCost@entry=4.6806782036844279) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:510
#17 0x00007f166112e068 in ghost::Solver::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:341
#18 0x00007f166112e53a in ghost::Solver::solve(double&, std::vector<int, std::allocator<int> >&, double, double, bool) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:155
#9  ghost::Domain::Domain(ghost::Domain const&) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/domain.cpp:71
#10 0x00007f166112b5ba in ghost::Variable::Variable(ghost::Variable const&) () at /usr/include/c++/8/bits/basic_string.h:936
#11 0x000055772c2b7743 in void std::vector<ghost::Variable, std::allocator<ghost::Variable> >::_M_realloc_insert<ghost::Variable>(__gnu_cxx::__normal_iterator<ghost::Variable*, std::vector<ghost::Variable, std::allocator<ghost::Variable> > >, ghost::Variable&&) ()
#12 0x000055772c2b745e in std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > > std::transform<__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, __gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}) [clone .isra.44] ()
#13 0x000055772c2b74b4 in g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int) ()
#15 0x00007f166112d18b in ghost::Constraint::cost (this=<optimized out>) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/include/constraint.hpp:108
#16 ghost::Solver::simulate_local_move_cost (this=this@entry=0x7ffe4734f6b0, variable=variable@entry=0x7f1660098010, value=<optimized out>, costConstraints=std::vector of length 7, capacity 7 = {...}, currentSatCost=currentSatCost@entry=4.6806782036844279) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:510
#17 0x00007f166112e068 in ghost::Solver::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:341
#18 0x00007f166112e53a in ghost::Solver::solve(double&, std::vector<int, std::allocator<int> >&, double, double, bool) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:155
0x00007f166112ac02 in ghost::Random::Random (other=..., this=0x55772e4971a0) at /usr/include/c++/8/ext/new_allocator.h:86
#0  0x00007f166112ac02 in ghost::Random::Random (other=..., this=0x55772e4971a0) at /usr/include/c++/8/ext/new_allocator.h:86
#1  ghost::Domain::Domain(ghost::Domain const&) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/domain.cpp:71
#2  0x00007f166112b5ba in ghost::Variable::Variable(ghost::Variable const&) () at /usr/include/c++/8/bits/basic_string.h:936
#3  0x000055772c2b73b3 in std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > > std::transform<__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, __gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}) [clone .isra.44] ()
#4  0x000055772c2b74b4 in g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int) ()
#6  0x00007f166112d18b in ghost::Constraint::cost (this=<optimized out>) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/include/constraint.hpp:108
#7  ghost::Solver::simulate_local_move_cost (this=this@entry=0x7ffe4734f6b0, variable=variable@entry=0x7f1660098010, value=<optimized out>, costConstraints=std::vector of length 7, capacity 7 = {...}, currentSatCost=currentSatCost@entry=4.6806782036844279) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:510
#8  0x00007f166112e068 in ghost::Solver::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:341
#9  0x00007f166112e53a in ghost::Solver::solve(double&, std::vector<int, std::allocator<int> >&, double, double, bool) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:155
#0  0x00007f166112ac02 in ghost::Random::Random (other=..., this=0x55772e4971a0) at /usr/include/c++/8/ext/new_allocator.h:86
#1  ghost::Domain::Domain(ghost::Domain const&) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/domain.cpp:71
#2  0x00007f166112b5ba in ghost::Variable::Variable(ghost::Variable const&) () at /usr/include/c++/8/bits/basic_string.h:936
#3  0x000055772c2b73b3 in std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > > std::transform<__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, __gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}) [clone .isra.44] ()
#4  0x000055772c2b74b4 in g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int) ()
#6  0x00007f166112d18b in ghost::Constraint::cost (this=<optimized out>) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/include/constraint.hpp:108
#7  ghost::Solver::simulate_local_move_cost (this=this@entry=0x7ffe4734f6b0, variable=variable@entry=0x7f1660098010, value=<optimized out>, costConstraints=std::vector of length 7, capacity 7 = {...}, currentSatCost=currentSatCost@entry=4.6806782036844279) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:510
#8  0x00007f166112e068 in ghost::Solver::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:341
#9  0x00007f166112e53a in ghost::Solver::solve(double&, std::vector<int, std::allocator<int> >&, double, double, bool) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:155
#0  0x00007f166112ac02 in ghost::Random::Random (other=..., this=0x55772e4971a0) at /usr/include/c++/8/ext/new_allocator.h:86
#1  ghost::Domain::Domain(ghost::Domain const&) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/domain.cpp:71
#2  0x00007f166112b5ba in ghost::Variable::Variable(ghost::Variable const&) () at /usr/include/c++/8/bits/basic_string.h:936
#3  0x000055772c2b73b3 in std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > > std::transform<__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, __gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}) [clone .isra.44] ()
#4  0x000055772c2b74b4 in g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int) ()
#6  0x00007f166112d18b in ghost::Constraint::cost (this=<optimized out>) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/include/constraint.hpp:108
#7  ghost::Solver::simulate_local_move_cost (this=this@entry=0x7ffe4734f6b0, variable=variable@entry=0x7f1660098010, value=<optimized out>, costConstraints=std::vector of length 7, capacity 7 = {...}, currentSatCost=currentSatCost@entry=4.6806782036844279) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:510
#8  0x00007f166112e068 in ghost::Solver::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:341
#9  0x00007f166112e53a in ghost::Solver::solve(double&, std::vector<int, std::allocator<int> >&, double, double, bool) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:155
0x00007f166112ac02 in ghost::Random::Random (other=..., this=0x7ffe47348358) at /usr/include/c++/8/ext/new_allocator.h:86
#0  0x00007f166112ac02 in ghost::Random::Random (other=..., this=0x7ffe47348358) at /usr/include/c++/8/ext/new_allocator.h:86
#1  ghost::Domain::Domain(ghost::Domain const&) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/domain.cpp:71
#2  0x00007f166112b5ba in ghost::Variable::Variable(ghost::Variable const&) () at /usr/include/c++/8/bits/basic_string.h:936
#3  0x000055772c2b739b in std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > > std::transform<__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, __gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}) [clone .isra.44] ()
#4  0x000055772c2b74b4 in g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int) ()
#6  0x00007f166112d18b in ghost::Constraint::cost (this=<optimized out>) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/include/constraint.hpp:108
#7  ghost::Solver::simulate_local_move_cost (this=this@entry=0x7ffe4734f6b0, variable=variable@entry=0x7f166009a7b8, value=<optimized out>, costConstraints=std::vector of length 7, capacity 7 = {...}, currentSatCost=currentSatCost@entry=4.6806782036844279) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:510
#8  0x00007f166112e068 in ghost::Solver::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:341
#9  0x00007f166112e53a in ghost::Solver::solve(double&, std::vector<int, std::allocator<int> >&, double, double, bool) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:155
#0  0x00007f166112ac02 in ghost::Random::Random (other=..., this=0x7ffe47348358) at /usr/include/c++/8/ext/new_allocator.h:86
#1  ghost::Domain::Domain(ghost::Domain const&) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/domain.cpp:71
#2  0x00007f166112b5ba in ghost::Variable::Variable(ghost::Variable const&) () at /usr/include/c++/8/bits/basic_string.h:936
#3  0x000055772c2b739b in std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > > std::transform<__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, __gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}) [clone .isra.44] ()
#4  0x000055772c2b74b4 in g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int) ()
#6  0x00007f166112d18b in ghost::Constraint::cost (this=<optimized out>) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/include/constraint.hpp:108
#7  ghost::Solver::simulate_local_move_cost (this=this@entry=0x7ffe4734f6b0, variable=variable@entry=0x7f166009a7b8, value=<optimized out>, costConstraints=std::vector of length 7, capacity 7 = {...}, currentSatCost=currentSatCost@entry=4.6806782036844279) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:510
#8  0x00007f166112e068 in ghost::Solver::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:341
#9  0x00007f166112e53a in ghost::Solver::solve(double&, std::vector<int, std::allocator<int> >&, double, double, bool) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:155
#0  0x00007f166112ac02 in ghost::Random::Random (other=..., this=0x7ffe47348358) at /usr/include/c++/8/ext/new_allocator.h:86
#1  ghost::Domain::Domain(ghost::Domain const&) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/domain.cpp:71
#2  0x00007f166112b5ba in ghost::Variable::Variable(ghost::Variable const&) () at /usr/include/c++/8/bits/basic_string.h:936
#3  0x000055772c2b739b in std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > > std::transform<__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, __gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}) [clone .isra.44] ()
#4  0x000055772c2b74b4 in g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int) ()
#6  0x00007f166112d18b in ghost::Constraint::cost (this=<optimized out>) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/include/constraint.hpp:108
#7  ghost::Solver::simulate_local_move_cost (this=this@entry=0x7ffe4734f6b0, variable=variable@entry=0x7f166009a7b8, value=<optimized out>, costConstraints=std::vector of length 7, capacity 7 = {...}, currentSatCost=currentSatCost@entry=4.6806782036844279) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:510
#8  0x00007f166112e068 in ghost::Solver::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:341
#9  0x00007f166112e53a in ghost::Solver::solve(double&, std::vector<int, std::allocator<int> >&, double, double, bool) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:155
0x00007f5a276c0c02 in ghost::Random::Random (other=..., this=0x556d5498f320) at /usr/include/c++/8/ext/new_allocator.h:86
#0  0x00007f5a276c0c02 in ghost::Random::Random (other=..., this=0x556d5498f320) at /usr/include/c++/8/ext/new_allocator.h:86
#1  ghost::Domain::Domain(ghost::Domain const&) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/domain.cpp:71
#2  0x00007f5a276c15ba in ghost::Variable::Variable(ghost::Variable const&) () at /usr/include/c++/8/bits/basic_string.h:936
#3  0x0000556d536733b3 in std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > > std::transform<__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, __gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}) [clone .isra.44] ()
#4  0x0000556d536734b4 in g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int) ()
#6  0x00007f5a276c241a in ghost::Constraint::cost (this=<optimized out>) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/include/constraint.hpp:108
#7  ghost::Solver::compute_constraints_costs (this=this@entry=0x7ffee7784ce0, costConstraints=std::vector of length 7, capacity 7 = {...}) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:293
#8  0x00007f5a276c4523 in ghost::Solver::solve(double&, std::vector<int, std::allocator<int> >&, double, double, bool) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:154
#0  0x00007f5a276c0c02 in ghost::Random::Random (other=..., this=0x556d5498f320) at /usr/include/c++/8/ext/new_allocator.h:86
#1  ghost::Domain::Domain(ghost::Domain const&) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/domain.cpp:71
#2  0x00007f5a276c15ba in ghost::Variable::Variable(ghost::Variable const&) () at /usr/include/c++/8/bits/basic_string.h:936
#3  0x0000556d536733b3 in std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > > std::transform<__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, __gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}) [clone .isra.44] ()
#4  0x0000556d536734b4 in g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int) ()
#6  0x00007f5a276c241a in ghost::Constraint::cost (this=<optimized out>) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/include/constraint.hpp:108
#7  ghost::Solver::compute_constraints_costs (this=this@entry=0x7ffee7784ce0, costConstraints=std::vector of length 7, capacity 7 = {...}) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:293
#8  0x00007f5a276c4523 in ghost::Solver::solve(double&, std::vector<int, std::allocator<int> >&, double, double, bool) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:154
#0  0x00007f5a276c0c02 in ghost::Random::Random (other=..., this=0x556d5498f320) at /usr/include/c++/8/ext/new_allocator.h:86
#1  ghost::Domain::Domain(ghost::Domain const&) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/domain.cpp:71
#2  0x00007f5a276c15ba in ghost::Variable::Variable(ghost::Variable const&) () at /usr/include/c++/8/bits/basic_string.h:936
#3  0x0000556d536733b3 in std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > > std::transform<__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, __gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}) [clone .isra.44] ()
#4  0x0000556d536734b4 in g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int) ()
#6  0x00007f5a276c241a in ghost::Constraint::cost (this=<optimized out>) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/include/constraint.hpp:108
#7  ghost::Solver::compute_constraints_costs (this=this@entry=0x7ffee7784ce0, costConstraints=std::vector of length 7, capacity 7 = {...}) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:293
#8  0x00007f5a276c4523 in ghost::Solver::solve(double&, std::vector<int, std::allocator<int> >&, double, double, bool) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:154
0x00007f5a276c0c02 in ghost::Random::Random (other=..., this=0x7ffee777d988) at /usr/include/c++/8/ext/new_allocator.h:86
#0  0x00007f5a276c0c02 in ghost::Random::Random (other=..., this=0x7ffee777d988) at /usr/include/c++/8/ext/new_allocator.h:86
#1  ghost::Domain::Domain(ghost::Domain const&) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/domain.cpp:71
#2  0x00007f5a276c15ba in ghost::Variable::Variable(ghost::Variable const&) () at /usr/include/c++/8/bits/basic_string.h:936
#3  0x0000556d5367339b in std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > > std::transform<__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, __gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}) [clone .isra.44] ()
#4  0x0000556d536734b4 in g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int) ()
#6  0x00007f5a276c318b in ghost::Constraint::cost (this=<optimized out>) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/include/constraint.hpp:108
#7  ghost::Solver::simulate_local_move_cost (this=this@entry=0x7ffee7784ce0, variable=variable@entry=0x7f5a2662e010, value=<optimized out>, costConstraints=std::vector of length 7, capacity 7 = {...}, currentSatCost=currentSatCost@entry=3.9568739734445835) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:510
#8  0x00007f5a276c4068 in ghost::Solver::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:341
#9  0x00007f5a276c453a in ghost::Solver::solve(double&, std::vector<int, std::allocator<int> >&, double, double, bool) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:155
#0  0x00007f5a276c0c02 in ghost::Random::Random (other=..., this=0x7ffee777d988) at /usr/include/c++/8/ext/new_allocator.h:86
#1  ghost::Domain::Domain(ghost::Domain const&) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/domain.cpp:71
#2  0x00007f5a276c15ba in ghost::Variable::Variable(ghost::Variable const&) () at /usr/include/c++/8/bits/basic_string.h:936
#3  0x0000556d5367339b in std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > > std::transform<__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, __gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}) [clone .isra.44] ()
#4  0x0000556d536734b4 in g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int) ()
#6  0x00007f5a276c318b in ghost::Constraint::cost (this=<optimized out>) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/include/constraint.hpp:108
#7  ghost::Solver::simulate_local_move_cost (this=this@entry=0x7ffee7784ce0, variable=variable@entry=0x7f5a2662e010, value=<optimized out>, costConstraints=std::vector of length 7, capacity 7 = {...}, currentSatCost=currentSatCost@entry=3.9568739734445835) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:510
#8  0x00007f5a276c4068 in ghost::Solver::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:341
#9  0x00007f5a276c453a in ghost::Solver::solve(double&, std::vector<int, std::allocator<int> >&, double, double, bool) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:155
#0  0x00007f5a276c0c02 in ghost::Random::Random (other=..., this=0x7ffee777d988) at /usr/include/c++/8/ext/new_allocator.h:86
#1  ghost::Domain::Domain(ghost::Domain const&) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/domain.cpp:71
#2  0x00007f5a276c15ba in ghost::Variable::Variable(ghost::Variable const&) () at /usr/include/c++/8/bits/basic_string.h:936
#3  0x0000556d5367339b in std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > > std::transform<__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, __gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}) [clone .isra.44] ()
#4  0x0000556d536734b4 in g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int) ()
#6  0x00007f5a276c318b in ghost::Constraint::cost (this=<optimized out>) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/include/constraint.hpp:108
#7  ghost::Solver::simulate_local_move_cost (this=this@entry=0x7ffee7784ce0, variable=variable@entry=0x7f5a2662e010, value=<optimized out>, costConstraints=std::vector of length 7, capacity 7 = {...}, currentSatCost=currentSatCost@entry=3.9568739734445835) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:510
#8  0x00007f5a276c4068 in ghost::Solver::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:341
#9  0x00007f5a276c453a in ghost::Solver::solve(double&, std::vector<int, std::allocator<int> >&, double, double, bool) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:155
0x00007f5a276c0c02 in ghost::Random::Random (other=..., this=0x7ffee777d988) at /usr/include/c++/8/ext/new_allocator.h:86
#0  0x00007f5a276c0c02 in ghost::Random::Random (other=..., this=0x7ffee777d988) at /usr/include/c++/8/ext/new_allocator.h:86
#1  ghost::Domain::Domain(ghost::Domain const&) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/domain.cpp:71
#2  0x00007f5a276c15ba in ghost::Variable::Variable(ghost::Variable const&) () at /usr/include/c++/8/bits/basic_string.h:936
#3  0x0000556d5367339b in std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > > std::transform<__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, __gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}) [clone .isra.44] ()
#4  0x0000556d536734b4 in g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int) ()
#6  0x00007f5a276c318b in ghost::Constraint::cost (this=<optimized out>) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/include/constraint.hpp:108
#7  ghost::Solver::simulate_local_move_cost (this=this@entry=0x7ffee7784ce0, variable=variable@entry=0x7f5a2662e010, value=<optimized out>, costConstraints=std::vector of length 7, capacity 7 = {...}, currentSatCost=currentSatCost@entry=3.9568739734445835) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:510
#8  0x00007f5a276c4068 in ghost::Solver::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:341
#9  0x00007f5a276c453a in ghost::Solver::solve(double&, std::vector<int, std::allocator<int> >&, double, double, bool) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:155
#0  0x00007f5a276c0c02 in ghost::Random::Random (other=..., this=0x7ffee777d988) at /usr/include/c++/8/ext/new_allocator.h:86
#1  ghost::Domain::Domain(ghost::Domain const&) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/domain.cpp:71
#2  0x00007f5a276c15ba in ghost::Variable::Variable(ghost::Variable const&) () at /usr/include/c++/8/bits/basic_string.h:936
#3  0x0000556d5367339b in std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > > std::transform<__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, __gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}) [clone .isra.44] ()
#4  0x0000556d536734b4 in g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int) ()
#6  0x00007f5a276c318b in ghost::Constraint::cost (this=<optimized out>) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/include/constraint.hpp:108
#7  ghost::Solver::simulate_local_move_cost (this=this@entry=0x7ffee7784ce0, variable=variable@entry=0x7f5a2662e010, value=<optimized out>, costConstraints=std::vector of length 7, capacity 7 = {...}, currentSatCost=currentSatCost@entry=3.9568739734445835) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:510
#8  0x00007f5a276c4068 in ghost::Solver::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:341
#9  0x00007f5a276c453a in ghost::Solver::solve(double&, std::vector<int, std::allocator<int> >&, double, double, bool) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:155
#0  0x00007f5a276c0c02 in ghost::Random::Random (other=..., this=0x7ffee777d988) at /usr/include/c++/8/ext/new_allocator.h:86
#1  ghost::Domain::Domain(ghost::Domain const&) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/domain.cpp:71
#2  0x00007f5a276c15ba in ghost::Variable::Variable(ghost::Variable const&) () at /usr/include/c++/8/bits/basic_string.h:936
#3  0x0000556d5367339b in std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > > std::transform<__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, __gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}) [clone .isra.44] ()
#4  0x0000556d536734b4 in g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int) ()
#6  0x00007f5a276c318b in ghost::Constraint::cost (this=<optimized out>) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/include/constraint.hpp:108
#7  ghost::Solver::simulate_local_move_cost (this=this@entry=0x7ffee7784ce0, variable=variable@entry=0x7f5a2662e010, value=<optimized out>, costConstraints=std::vector of length 7, capacity 7 = {...}, currentSatCost=currentSatCost@entry=3.9568739734445835) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:510
#8  0x00007f5a276c4068 in ghost::Solver::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:341
#9  0x00007f5a276c453a in ghost::Solver::solve(double&, std::vector<int, std::allocator<int> >&, double, double, bool) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:155
0x00007f5a276c0c02 in ghost::Random::Random (other=..., this=0x556d54a62318) at /usr/include/c++/8/ext/new_allocator.h:86
#0  0x00007f5a276c0c02 in ghost::Random::Random (other=..., this=0x556d54a62318) at /usr/include/c++/8/ext/new_allocator.h:86
#1  ghost::Domain::Domain(ghost::Domain const&) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/domain.cpp:71
#2  0x00007f5a276c15ba in ghost::Variable::Variable(ghost::Variable const&) () at /usr/include/c++/8/bits/basic_string.h:936
#3  0x0000556d53673743 in void std::vector<ghost::Variable, std::allocator<ghost::Variable> >::_M_realloc_insert<ghost::Variable>(__gnu_cxx::__normal_iterator<ghost::Variable*, std::vector<ghost::Variable, std::allocator<ghost::Variable> > >, ghost::Variable&&) ()
#4  0x0000556d5367345e in std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > > std::transform<__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, __gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}) [clone .isra.44] ()
#5  0x0000556d536734b4 in g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int) ()
#7  0x00007f5a276c318b in ghost::Constraint::cost (this=<optimized out>) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/include/constraint.hpp:108
#8  ghost::Solver::simulate_local_move_cost (this=this@entry=0x7ffee7784ce0, variable=variable@entry=0x7f5a266307b8, value=<optimized out>, costConstraints=std::vector of length 7, capacity 7 = {...}, currentSatCost=currentSatCost@entry=3.9568739734445835) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:510
#9  0x00007f5a276c4068 in ghost::Solver::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:341
#10 0x00007f5a276c453a in ghost::Solver::solve(double&, std::vector<int, std::allocator<int> >&, double, double, bool) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:155
#0  0x00007f5a276c0c02 in ghost::Random::Random (other=..., this=0x556d54a62318) at /usr/include/c++/8/ext/new_allocator.h:86
#1  ghost::Domain::Domain(ghost::Domain const&) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/domain.cpp:71
#2  0x00007f5a276c15ba in ghost::Variable::Variable(ghost::Variable const&) () at /usr/include/c++/8/bits/basic_string.h:936
#3  0x0000556d53673743 in void std::vector<ghost::Variable, std::allocator<ghost::Variable> >::_M_realloc_insert<ghost::Variable>(__gnu_cxx::__normal_iterator<ghost::Variable*, std::vector<ghost::Variable, std::allocator<ghost::Variable> > >, ghost::Variable&&) ()
#4  0x0000556d5367345e in std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > > std::transform<__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, __gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}) [clone .isra.44] ()
#5  0x0000556d536734b4 in g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int) ()
#7  0x00007f5a276c318b in ghost::Constraint::cost (this=<optimized out>) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/include/constraint.hpp:108
#8  ghost::Solver::simulate_local_move_cost (this=this@entry=0x7ffee7784ce0, variable=variable@entry=0x7f5a266307b8, value=<optimized out>, costConstraints=std::vector of length 7, capacity 7 = {...}, currentSatCost=currentSatCost@entry=3.9568739734445835) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:510
#9  0x00007f5a276c4068 in ghost::Solver::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:341
#10 0x00007f5a276c453a in ghost::Solver::solve(double&, std::vector<int, std::allocator<int> >&, double, double, bool) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:155
#0  0x00007f5a276c0c02 in ghost::Random::Random (other=..., this=0x556d54a62318) at /usr/include/c++/8/ext/new_allocator.h:86
#1  ghost::Domain::Domain(ghost::Domain const&) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/domain.cpp:71
#2  0x00007f5a276c15ba in ghost::Variable::Variable(ghost::Variable const&) () at /usr/include/c++/8/bits/basic_string.h:936
#3  0x0000556d53673743 in void std::vector<ghost::Variable, std::allocator<ghost::Variable> >::_M_realloc_insert<ghost::Variable>(__gnu_cxx::__normal_iterator<ghost::Variable*, std::vector<ghost::Variable, std::allocator<ghost::Variable> > >, ghost::Variable&&) ()
#4  0x0000556d5367345e in std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > > std::transform<__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, __gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}) [clone .isra.44] ()
#5  0x0000556d536734b4 in g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int) ()
#7  0x00007f5a276c318b in ghost::Constraint::cost (this=<optimized out>) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/include/constraint.hpp:108
#8  ghost::Solver::simulate_local_move_cost (this=this@entry=0x7ffee7784ce0, variable=variable@entry=0x7f5a266307b8, value=<optimized out>, costConstraints=std::vector of length 7, capacity 7 = {...}, currentSatCost=currentSatCost@entry=3.9568739734445835) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:510
#9  0x00007f5a276c4068 in ghost::Solver::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:341
#10 0x00007f5a276c453a in ghost::Solver::solve(double&, std::vector<int, std::allocator<int> >&, double, double, bool) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:155
#6  0x00005592ec87b54a in g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int) ()
#8  0x00007fdcd310041a in ghost::Constraint::cost (this=<optimized out>) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/include/constraint.hpp:108
#9  ghost::Solver::compute_constraints_costs (this=this@entry=0x7ffea1ee77a0, costConstraints=std::vector of length 7, capacity 7 = {...}) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:293
#10 0x00007fdcd3102523 in ghost::Solver::solve(double&, std::vector<int, std::allocator<int> >&, double, double, bool) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:154
#6  0x00005592ec87b54a in g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int) ()
#8  0x00007fdcd310041a in ghost::Constraint::cost (this=<optimized out>) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/include/constraint.hpp:108
#9  ghost::Solver::compute_constraints_costs (this=this@entry=0x7ffea1ee77a0, costConstraints=std::vector of length 7, capacity 7 = {...}) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:293
#10 0x00007fdcd3102523 in ghost::Solver::solve(double&, std::vector<int, std::allocator<int> >&, double, double, bool) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:154
#6  0x00005592ec87b54a in g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int) ()
#8  0x00007fdcd310041a in ghost::Constraint::cost (this=<optimized out>) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/include/constraint.hpp:108
#9  ghost::Solver::compute_constraints_costs (this=this@entry=0x7ffea1ee77a0, costConstraints=std::vector of length 7, capacity 7 = {...}) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:293
#10 0x00007fdcd3102523 in ghost::Solver::solve(double&, std::vector<int, std::allocator<int> >&, double, double, bool) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:154
0x00007fdcd30fec02 in ghost::Random::Random (other=..., this=0x5592ed59ebb8) at /usr/include/c++/8/ext/new_allocator.h:86
#0  0x00007fdcd30fec02 in ghost::Random::Random (other=..., this=0x5592ed59ebb8) at /usr/include/c++/8/ext/new_allocator.h:86
#1  ghost::Domain::Domain(ghost::Domain const&) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/domain.cpp:71
#2  0x00007fdcd30ff5ba in ghost::Variable::Variable(ghost::Variable const&) () at /usr/include/c++/8/bits/basic_string.h:936
#3  0x00005592ec87b3b3 in std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > > std::transform<__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, __gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}) [clone .isra.44] ()
#4  0x00005592ec87b4b4 in g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int) ()
#6  0x00007fdcd310118b in ghost::Constraint::cost (this=<optimized out>) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/include/constraint.hpp:108
#7  ghost::Solver::simulate_local_move_cost (this=this@entry=0x7ffea1ee77a0, variable=variable@entry=0x7fdcd206c010, value=<optimized out>, costConstraints=std::vector of length 7, capacity 7 = {...}, currentSatCost=currentSatCost@entry=1.7624264068711941) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:510
#8  0x00007fdcd3102068 in ghost::Solver::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:341
#9  0x00007fdcd310253a in ghost::Solver::solve(double&, std::vector<int, std::allocator<int> >&, double, double, bool) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:155
#0  0x00007fdcd30fec02 in ghost::Random::Random (other=..., this=0x5592ed59ebb8) at /usr/include/c++/8/ext/new_allocator.h:86
#1  ghost::Domain::Domain(ghost::Domain const&) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/domain.cpp:71
#2  0x00007fdcd30ff5ba in ghost::Variable::Variable(ghost::Variable const&) () at /usr/include/c++/8/bits/basic_string.h:936
#3  0x00005592ec87b3b3 in std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > > std::transform<__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, __gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}) [clone .isra.44] ()
#4  0x00005592ec87b4b4 in g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int) ()
#6  0x00007fdcd310118b in ghost::Constraint::cost (this=<optimized out>) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/include/constraint.hpp:108
#7  ghost::Solver::simulate_local_move_cost (this=this@entry=0x7ffea1ee77a0, variable=variable@entry=0x7fdcd206c010, value=<optimized out>, costConstraints=std::vector of length 7, capacity 7 = {...}, currentSatCost=currentSatCost@entry=1.7624264068711941) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:510
#8  0x00007fdcd3102068 in ghost::Solver::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:341
#9  0x00007fdcd310253a in ghost::Solver::solve(double&, std::vector<int, std::allocator<int> >&, double, double, bool) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:155
#0  0x00007fdcd30fec02 in ghost::Random::Random (other=..., this=0x5592ed59ebb8) at /usr/include/c++/8/ext/new_allocator.h:86
#1  ghost::Domain::Domain(ghost::Domain const&) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/domain.cpp:71
#2  0x00007fdcd30ff5ba in ghost::Variable::Variable(ghost::Variable const&) () at /usr/include/c++/8/bits/basic_string.h:936
#3  0x00005592ec87b3b3 in std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > > std::transform<__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, __gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}) [clone .isra.44] ()
#4  0x00005592ec87b4b4 in g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int) ()
#6  0x00007fdcd310118b in ghost::Constraint::cost (this=<optimized out>) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/include/constraint.hpp:108
#7  ghost::Solver::simulate_local_move_cost (this=this@entry=0x7ffea1ee77a0, variable=variable@entry=0x7fdcd206c010, value=<optimized out>, costConstraints=std::vector of length 7, capacity 7 = {...}, currentSatCost=currentSatCost@entry=1.7624264068711941) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:510
#8  0x00007fdcd3102068 in ghost::Solver::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:341
#9  0x00007fdcd310253a in ghost::Solver::solve(double&, std::vector<int, std::allocator<int> >&, double, double, bool) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:155
0x00007fdcd30fec02 in ghost::Random::Random (other=..., this=0x5592ed6aa9f8) at /usr/include/c++/8/ext/new_allocator.h:86
#0  0x00007fdcd30fec02 in ghost::Random::Random (other=..., this=0x5592ed6aa9f8) at /usr/include/c++/8/ext/new_allocator.h:86
#1  ghost::Domain::Domain(ghost::Domain const&) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/domain.cpp:71
#2  0x00007fdcd30ff5ba in ghost::Variable::Variable(ghost::Variable const&) () at /usr/include/c++/8/bits/basic_string.h:936
#3  0x00005592ec87b743 in void std::vector<ghost::Variable, std::allocator<ghost::Variable> >::_M_realloc_insert<ghost::Variable>(__gnu_cxx::__normal_iterator<ghost::Variable*, std::vector<ghost::Variable, std::allocator<ghost::Variable> > >, ghost::Variable&&) ()
#4  0x00005592ec87b45e in std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > > std::transform<__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, __gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}) [clone .isra.44] ()
#5  0x00005592ec87b4b4 in g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int) ()
#7  0x00007fdcd310118b in ghost::Constraint::cost (this=<optimized out>) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/include/constraint.hpp:108
#8  ghost::Solver::simulate_local_move_cost (this=this@entry=0x7ffea1ee77a0, variable=variable@entry=0x7fdcd206e7b8, value=<optimized out>, costConstraints=std::vector of length 7, capacity 7 = {...}, currentSatCost=currentSatCost@entry=1.7624264068711941) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:510
#9  0x00007fdcd3102068 in ghost::Solver::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:341
#10 0x00007fdcd310253a in ghost::Solver::solve(double&, std::vector<int, std::allocator<int> >&, double, double, bool) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:155
#0  0x00007fdcd30fec02 in ghost::Random::Random (other=..., this=0x5592ed6aa9f8) at /usr/include/c++/8/ext/new_allocator.h:86
#1  ghost::Domain::Domain(ghost::Domain const&) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/domain.cpp:71
#2  0x00007fdcd30ff5ba in ghost::Variable::Variable(ghost::Variable const&) () at /usr/include/c++/8/bits/basic_string.h:936
#3  0x00005592ec87b743 in void std::vector<ghost::Variable, std::allocator<ghost::Variable> >::_M_realloc_insert<ghost::Variable>(__gnu_cxx::__normal_iterator<ghost::Variable*, std::vector<ghost::Variable, std::allocator<ghost::Variable> > >, ghost::Variable&&) ()
#4  0x00005592ec87b45e in std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > > std::transform<__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, __gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}) [clone .isra.44] ()
#5  0x00005592ec87b4b4 in g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int) ()
#7  0x00007fdcd310118b in ghost::Constraint::cost (this=<optimized out>) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/include/constraint.hpp:108
#8  ghost::Solver::simulate_local_move_cost (this=this@entry=0x7ffea1ee77a0, variable=variable@entry=0x7fdcd206e7b8, value=<optimized out>, costConstraints=std::vector of length 7, capacity 7 = {...}, currentSatCost=currentSatCost@entry=1.7624264068711941) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:510
#9  0x00007fdcd3102068 in ghost::Solver::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:341
#10 0x00007fdcd310253a in ghost::Solver::solve(double&, std::vector<int, std::allocator<int> >&, double, double, bool) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:155
#0  0x00007fdcd30fec02 in ghost::Random::Random (other=..., this=0x5592ed6aa9f8) at /usr/include/c++/8/ext/new_allocator.h:86
#1  ghost::Domain::Domain(ghost::Domain const&) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/domain.cpp:71
#2  0x00007fdcd30ff5ba in ghost::Variable::Variable(ghost::Variable const&) () at /usr/include/c++/8/bits/basic_string.h:936
#3  0x00005592ec87b743 in void std::vector<ghost::Variable, std::allocator<ghost::Variable> >::_M_realloc_insert<ghost::Variable>(__gnu_cxx::__normal_iterator<ghost::Variable*, std::vector<ghost::Variable, std::allocator<ghost::Variable> > >, ghost::Variable&&) ()
#4  0x00005592ec87b45e in std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > > std::transform<__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, __gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}) [clone .isra.44] ()
#5  0x00005592ec87b4b4 in g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int) ()
#7  0x00007fdcd310118b in ghost::Constraint::cost (this=<optimized out>) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/include/constraint.hpp:108
#8  ghost::Solver::simulate_local_move_cost (this=this@entry=0x7ffea1ee77a0, variable=variable@entry=0x7fdcd206e7b8, value=<optimized out>, costConstraints=std::vector of length 7, capacity 7 = {...}, currentSatCost=currentSatCost@entry=1.7624264068711941) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:510
#9  0x00007fdcd3102068 in ghost::Solver::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:341
#10 0x00007fdcd310253a in ghost::Solver::solve(double&, std::vector<int, std::allocator<int> >&, double, double, bool) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:155
0x00007fdcd30fec02 in ghost::Random::Random (other=..., this=0x5592ed6a5c48) at /usr/include/c++/8/ext/new_allocator.h:86
#0  0x00007fdcd30fec02 in ghost::Random::Random (other=..., this=0x5592ed6a5c48) at /usr/include/c++/8/ext/new_allocator.h:86
#1  ghost::Domain::Domain(ghost::Domain const&) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/domain.cpp:71
#2  0x00007fdcd30ff5ba in ghost::Variable::Variable(ghost::Variable const&) () at /usr/include/c++/8/bits/basic_string.h:936
#3  0x00005592ec87b743 in void std::vector<ghost::Variable, std::allocator<ghost::Variable> >::_M_realloc_insert<ghost::Variable>(__gnu_cxx::__normal_iterator<ghost::Variable*, std::vector<ghost::Variable, std::allocator<ghost::Variable> > >, ghost::Variable&&) ()
#4  0x00005592ec87b45e in std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > > std::transform<__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, __gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}) [clone .isra.44] ()
#5  0x00005592ec87b4b4 in g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int) ()
#7  0x00007fdcd310118b in ghost::Constraint::cost (this=<optimized out>) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/include/constraint.hpp:108
#8  ghost::Solver::simulate_local_move_cost (this=this@entry=0x7ffea1ee77a0, variable=variable@entry=0x7fdcd206e7b8, value=<optimized out>, costConstraints=std::vector of length 7, capacity 7 = {...}, currentSatCost=currentSatCost@entry=1.7624264068711941) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:510
#9  0x00007fdcd3102068 in ghost::Solver::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:341
#10 0x00007fdcd310253a in ghost::Solver::solve(double&, std::vector<int, std::allocator<int> >&, double, double, bool) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:155
#0  0x00007fdcd30fec02 in ghost::Random::Random (other=..., this=0x5592ed6a5c48) at /usr/include/c++/8/ext/new_allocator.h:86
#1  ghost::Domain::Domain(ghost::Domain const&) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/domain.cpp:71
#2  0x00007fdcd30ff5ba in ghost::Variable::Variable(ghost::Variable const&) () at /usr/include/c++/8/bits/basic_string.h:936
#3  0x00005592ec87b743 in void std::vector<ghost::Variable, std::allocator<ghost::Variable> >::_M_realloc_insert<ghost::Variable>(__gnu_cxx::__normal_iterator<ghost::Variable*, std::vector<ghost::Variable, std::allocator<ghost::Variable> > >, ghost::Variable&&) ()
#4  0x00005592ec87b45e in std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > > std::transform<__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, __gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}) [clone .isra.44] ()
#5  0x00005592ec87b4b4 in g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int) ()
#7  0x00007fdcd310118b in ghost::Constraint::cost (this=<optimized out>) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/include/constraint.hpp:108
#8  ghost::Solver::simulate_local_move_cost (this=this@entry=0x7ffea1ee77a0, variable=variable@entry=0x7fdcd206e7b8, value=<optimized out>, costConstraints=std::vector of length 7, capacity 7 = {...}, currentSatCost=currentSatCost@entry=1.7624264068711941) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:510
#9  0x00007fdcd3102068 in ghost::Solver::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:341
#10 0x00007fdcd310253a in ghost::Solver::solve(double&, std::vector<int, std::allocator<int> >&, double, double, bool) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:155
#0  0x00007fdcd30fec02 in ghost::Random::Random (other=..., this=0x5592ed6a5c48) at /usr/include/c++/8/ext/new_allocator.h:86
#1  ghost::Domain::Domain(ghost::Domain const&) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/domain.cpp:71
#2  0x00007fdcd30ff5ba in ghost::Variable::Variable(ghost::Variable const&) () at /usr/include/c++/8/bits/basic_string.h:936
#3  0x00005592ec87b743 in void std::vector<ghost::Variable, std::allocator<ghost::Variable> >::_M_realloc_insert<ghost::Variable>(__gnu_cxx::__normal_iterator<ghost::Variable*, std::vector<ghost::Variable, std::allocator<ghost::Variable> > >, ghost::Variable&&) ()
#4  0x00005592ec87b45e in std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > > std::transform<__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, __gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}) [clone .isra.44] ()
#5  0x00005592ec87b4b4 in g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int) ()
#7  0x00007fdcd310118b in ghost::Constraint::cost (this=<optimized out>) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/include/constraint.hpp:108
#8  ghost::Solver::simulate_local_move_cost (this=this@entry=0x7ffea1ee77a0, variable=variable@entry=0x7fdcd206e7b8, value=<optimized out>, costConstraints=std::vector of length 7, capacity 7 = {...}, currentSatCost=currentSatCost@entry=1.7624264068711941) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:510
#9  0x00007fdcd3102068 in ghost::Solver::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:341
#10 0x00007fdcd310253a in ghost::Solver::solve(double&, std::vector<int, std::allocator<int> >&, double, double, bool) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:155
0x00007f2dc1f01c02 in ghost::Random::Random (other=..., this=0x55b42fc93910) at /usr/include/c++/8/ext/new_allocator.h:86
#0  0x00007f2dc1f01c02 in ghost::Random::Random (other=..., this=0x55b42fc93910) at /usr/include/c++/8/ext/new_allocator.h:86
#1  ghost::Domain::Domain(ghost::Domain const&) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/domain.cpp:71
#2  0x00007f2dc1f025ba in ghost::Variable::Variable(ghost::Variable const&) () at /usr/include/c++/8/bits/basic_string.h:936
#3  0x000055b42e4b9743 in void std::vector<ghost::Variable, std::allocator<ghost::Variable> >::_M_realloc_insert<ghost::Variable>(__gnu_cxx::__normal_iterator<ghost::Variable*, std::vector<ghost::Variable, std::allocator<ghost::Variable> > >, ghost::Variable&&) ()
#4  0x000055b42e4b945e in std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > > std::transform<__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, __gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}) [clone .isra.44] ()
#5  0x000055b42e4b94b4 in g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int) ()
#7  0x00007f2dc1f0341a in ghost::Constraint::cost (this=<optimized out>) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/include/constraint.hpp:108
#8  ghost::Solver::compute_constraints_costs (this=this@entry=0x7ffd5fdccd30, costConstraints=std::vector of length 7, capacity 7 = {...}) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:293
#9  0x00007f2dc1f05523 in ghost::Solver::solve(double&, std::vector<int, std::allocator<int> >&, double, double, bool) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:154
#0  0x00007f2dc1f01c02 in ghost::Random::Random (other=..., this=0x55b42fc93910) at /usr/include/c++/8/ext/new_allocator.h:86
#1  ghost::Domain::Domain(ghost::Domain const&) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/domain.cpp:71
#2  0x00007f2dc1f025ba in ghost::Variable::Variable(ghost::Variable const&) () at /usr/include/c++/8/bits/basic_string.h:936
#3  0x000055b42e4b9743 in void std::vector<ghost::Variable, std::allocator<ghost::Variable> >::_M_realloc_insert<ghost::Variable>(__gnu_cxx::__normal_iterator<ghost::Variable*, std::vector<ghost::Variable, std::allocator<ghost::Variable> > >, ghost::Variable&&) ()
#4  0x000055b42e4b945e in std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > > std::transform<__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, __gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}) [clone .isra.44] ()
#5  0x000055b42e4b94b4 in g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int) ()
#7  0x00007f2dc1f0341a in ghost::Constraint::cost (this=<optimized out>) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/include/constraint.hpp:108
#8  ghost::Solver::compute_constraints_costs (this=this@entry=0x7ffd5fdccd30, costConstraints=std::vector of length 7, capacity 7 = {...}) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:293
#9  0x00007f2dc1f05523 in ghost::Solver::solve(double&, std::vector<int, std::allocator<int> >&, double, double, bool) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:154
#0  0x00007f2dc1f01c02 in ghost::Random::Random (other=..., this=0x55b42fc93910) at /usr/include/c++/8/ext/new_allocator.h:86
#1  ghost::Domain::Domain(ghost::Domain const&) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/domain.cpp:71
#2  0x00007f2dc1f025ba in ghost::Variable::Variable(ghost::Variable const&) () at /usr/include/c++/8/bits/basic_string.h:936
#3  0x000055b42e4b9743 in void std::vector<ghost::Variable, std::allocator<ghost::Variable> >::_M_realloc_insert<ghost::Variable>(__gnu_cxx::__normal_iterator<ghost::Variable*, std::vector<ghost::Variable, std::allocator<ghost::Variable> > >, ghost::Variable&&) ()
#4  0x000055b42e4b945e in std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > > std::transform<__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, __gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}) [clone .isra.44] ()
#5  0x000055b42e4b94b4 in g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int) ()
#7  0x00007f2dc1f0341a in ghost::Constraint::cost (this=<optimized out>) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/include/constraint.hpp:108
#8  ghost::Solver::compute_constraints_costs (this=this@entry=0x7ffd5fdccd30, costConstraints=std::vector of length 7, capacity 7 = {...}) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:293
#9  0x00007f2dc1f05523 in ghost::Solver::solve(double&, std::vector<int, std::allocator<int> >&, double, double, bool) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:154
0x00007f2dc1f01c02 in ghost::Random::Random (other=..., this=0x55b42fe13c28) at /usr/include/c++/8/ext/new_allocator.h:86
#0  0x00007f2dc1f01c02 in ghost::Random::Random (other=..., this=0x55b42fe13c28) at /usr/include/c++/8/ext/new_allocator.h:86
#1  ghost::Domain::Domain(ghost::Domain const&) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/domain.cpp:71
#2  0x00007f2dc1f025ba in ghost::Variable::Variable(ghost::Variable const&) () at /usr/include/c++/8/bits/basic_string.h:936
#3  0x000055b42e4b93b3 in std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > > std::transform<__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, __gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}) [clone .isra.44] ()
#4  0x000055b42e4b94b4 in g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int) ()
#6  0x00007f2dc1f0418b in ghost::Constraint::cost (this=<optimized out>) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/include/constraint.hpp:108
#7  ghost::Solver::simulate_local_move_cost (this=this@entry=0x7ffd5fdccd30, variable=variable@entry=0x7f2dc0e6f010, value=<optimized out>, costConstraints=std::vector of length 7, capacity 7 = {...}, currentSatCost=currentSatCost@entry=1.8326296286848578) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:510
#8  0x00007f2dc1f05068 in ghost::Solver::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:341
#9  0x00007f2dc1f0553a in ghost::Solver::solve(double&, std::vector<int, std::allocator<int> >&, double, double, bool) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:155
#0  0x00007f2dc1f01c02 in ghost::Random::Random (other=..., this=0x55b42fe13c28) at /usr/include/c++/8/ext/new_allocator.h:86
#1  ghost::Domain::Domain(ghost::Domain const&) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/domain.cpp:71
#2  0x00007f2dc1f025ba in ghost::Variable::Variable(ghost::Variable const&) () at /usr/include/c++/8/bits/basic_string.h:936
#3  0x000055b42e4b93b3 in std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > > std::transform<__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, __gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}) [clone .isra.44] ()
#4  0x000055b42e4b94b4 in g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int) ()
#6  0x00007f2dc1f0418b in ghost::Constraint::cost (this=<optimized out>) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/include/constraint.hpp:108
#7  ghost::Solver::simulate_local_move_cost (this=this@entry=0x7ffd5fdccd30, variable=variable@entry=0x7f2dc0e6f010, value=<optimized out>, costConstraints=std::vector of length 7, capacity 7 = {...}, currentSatCost=currentSatCost@entry=1.8326296286848578) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:510
#8  0x00007f2dc1f05068 in ghost::Solver::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:341
#9  0x00007f2dc1f0553a in ghost::Solver::solve(double&, std::vector<int, std::allocator<int> >&, double, double, bool) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:155
#0  0x00007f2dc1f01c02 in ghost::Random::Random (other=..., this=0x55b42fe13c28) at /usr/include/c++/8/ext/new_allocator.h:86
#1  ghost::Domain::Domain(ghost::Domain const&) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/domain.cpp:71
#2  0x00007f2dc1f025ba in ghost::Variable::Variable(ghost::Variable const&) () at /usr/include/c++/8/bits/basic_string.h:936
#3  0x000055b42e4b93b3 in std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > > std::transform<__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, __gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}) [clone .isra.44] ()
#4  0x000055b42e4b94b4 in g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int) ()
#6  0x00007f2dc1f0418b in ghost::Constraint::cost (this=<optimized out>) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/include/constraint.hpp:108
#7  ghost::Solver::simulate_local_move_cost (this=this@entry=0x7ffd5fdccd30, variable=variable@entry=0x7f2dc0e6f010, value=<optimized out>, costConstraints=std::vector of length 7, capacity 7 = {...}, currentSatCost=currentSatCost@entry=1.8326296286848578) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:510
#8  0x00007f2dc1f05068 in ghost::Solver::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:341
#9  0x00007f2dc1f0553a in ghost::Solver::solve(double&, std::vector<int, std::allocator<int> >&, double, double, bool) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:155
#2  ghost::Random::Random (other=..., this=0x55b42fcb3b88) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/include/misc/random.hpp:78
#3  ghost::Domain::Domain(ghost::Domain const&) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/domain.cpp:71
#4  0x00007f2dc1f025ba in ghost::Variable::Variable(ghost::Variable const&) () at /usr/include/c++/8/bits/basic_string.h:936
#5  0x000055b42e4b93b3 in std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > > std::transform<__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, __gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}) [clone .isra.44] ()
#6  0x000055b42e4b94b4 in g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int) ()
#8  0x00007f2dc1f0418b in ghost::Constraint::cost (this=<optimized out>) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/include/constraint.hpp:108
#9  ghost::Solver::simulate_local_move_cost (this=this@entry=0x7ffd5fdccd30, variable=variable@entry=0x7f2dc0e6f010, value=<optimized out>, costConstraints=std::vector of length 7, capacity 7 = {...}, currentSatCost=currentSatCost@entry=1.8326296286848578) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:510
#10 0x00007f2dc1f05068 in ghost::Solver::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:341
#11 0x00007f2dc1f0553a in ghost::Solver::solve(double&, std::vector<int, std::allocator<int> >&, double, double, bool) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:155
#2  ghost::Random::Random (other=..., this=0x55b42fcb3b88) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/include/misc/random.hpp:78
#3  ghost::Domain::Domain(ghost::Domain const&) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/domain.cpp:71
#4  0x00007f2dc1f025ba in ghost::Variable::Variable(ghost::Variable const&) () at /usr/include/c++/8/bits/basic_string.h:936
#5  0x000055b42e4b93b3 in std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > > std::transform<__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, __gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}) [clone .isra.44] ()
#6  0x000055b42e4b94b4 in g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int) ()
#8  0x00007f2dc1f0418b in ghost::Constraint::cost (this=<optimized out>) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/include/constraint.hpp:108
#9  ghost::Solver::simulate_local_move_cost (this=this@entry=0x7ffd5fdccd30, variable=variable@entry=0x7f2dc0e6f010, value=<optimized out>, costConstraints=std::vector of length 7, capacity 7 = {...}, currentSatCost=currentSatCost@entry=1.8326296286848578) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:510
#10 0x00007f2dc1f05068 in ghost::Solver::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:341
#11 0x00007f2dc1f0553a in ghost::Solver::solve(double&, std::vector<int, std::allocator<int> >&, double, double, bool) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:155
#2  ghost::Random::Random (other=..., this=0x55b42fcb3b88) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/include/misc/random.hpp:78
#3  ghost::Domain::Domain(ghost::Domain const&) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/domain.cpp:71
#4  0x00007f2dc1f025ba in ghost::Variable::Variable(ghost::Variable const&) () at /usr/include/c++/8/bits/basic_string.h:936
#5  0x000055b42e4b93b3 in std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > > std::transform<__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, __gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}) [clone .isra.44] ()
#6  0x000055b42e4b94b4 in g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int) ()
#8  0x00007f2dc1f0418b in ghost::Constraint::cost (this=<optimized out>) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/include/constraint.hpp:108
#9  ghost::Solver::simulate_local_move_cost (this=this@entry=0x7ffd5fdccd30, variable=variable@entry=0x7f2dc0e6f010, value=<optimized out>, costConstraints=std::vector of length 7, capacity 7 = {...}, currentSatCost=currentSatCost@entry=1.8326296286848578) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:510
#10 0x00007f2dc1f05068 in ghost::Solver::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:341
#11 0x00007f2dc1f0553a in ghost::Solver::solve(double&, std::vector<int, std::allocator<int> >&, double, double, bool) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:155
#2  ghost::Random::Random (other=..., this=0x7ffd5fdc59d8) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/include/misc/random.hpp:78
#3  ghost::Domain::Domain(ghost::Domain const&) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/domain.cpp:71
#4  0x00007f2dc1f025ba in ghost::Variable::Variable(ghost::Variable const&) () at /usr/include/c++/8/bits/basic_string.h:936
#5  0x000055b42e4b939b in std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > > std::transform<__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, __gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}) [clone .isra.44] ()
#6  0x000055b42e4b94b4 in g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int) ()
#8  0x00007f2dc1f0418b in ghost::Constraint::cost (this=<optimized out>) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/include/constraint.hpp:108
#9  ghost::Solver::simulate_local_move_cost (this=this@entry=0x7ffd5fdccd30, variable=variable@entry=0x7f2dc0e6f010, value=<optimized out>, costConstraints=std::vector of length 7, capacity 7 = {...}, currentSatCost=currentSatCost@entry=1.8326296286848578) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:510
#10 0x00007f2dc1f05068 in ghost::Solver::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:341
#11 0x00007f2dc1f0553a in ghost::Solver::solve(double&, std::vector<int, std::allocator<int> >&, double, double, bool) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:155
#2  ghost::Random::Random (other=..., this=0x7ffd5fdc59d8) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/include/misc/random.hpp:78
#3  ghost::Domain::Domain(ghost::Domain const&) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/domain.cpp:71
#4  0x00007f2dc1f025ba in ghost::Variable::Variable(ghost::Variable const&) () at /usr/include/c++/8/bits/basic_string.h:936
#5  0x000055b42e4b939b in std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > > std::transform<__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, __gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}) [clone .isra.44] ()
#6  0x000055b42e4b94b4 in g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int) ()
#8  0x00007f2dc1f0418b in ghost::Constraint::cost (this=<optimized out>) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/include/constraint.hpp:108
#9  ghost::Solver::simulate_local_move_cost (this=this@entry=0x7ffd5fdccd30, variable=variable@entry=0x7f2dc0e6f010, value=<optimized out>, costConstraints=std::vector of length 7, capacity 7 = {...}, currentSatCost=currentSatCost@entry=1.8326296286848578) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:510
#10 0x00007f2dc1f05068 in ghost::Solver::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:341
#11 0x00007f2dc1f0553a in ghost::Solver::solve(double&, std::vector<int, std::allocator<int> >&, double, double, bool) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:155
#2  ghost::Random::Random (other=..., this=0x7ffd5fdc59d8) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/include/misc/random.hpp:78
#3  ghost::Domain::Domain(ghost::Domain const&) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/domain.cpp:71
#4  0x00007f2dc1f025ba in ghost::Variable::Variable(ghost::Variable const&) () at /usr/include/c++/8/bits/basic_string.h:936
#5  0x000055b42e4b939b in std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > > std::transform<__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, __gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}) [clone .isra.44] ()
#6  0x000055b42e4b94b4 in g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int) ()
#8  0x00007f2dc1f0418b in ghost::Constraint::cost (this=<optimized out>) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/include/constraint.hpp:108
#9  ghost::Solver::simulate_local_move_cost (this=this@entry=0x7ffd5fdccd30, variable=variable@entry=0x7f2dc0e6f010, value=<optimized out>, costConstraints=std::vector of length 7, capacity 7 = {...}, currentSatCost=currentSatCost@entry=1.8326296286848578) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:510
#10 0x00007f2dc1f05068 in ghost::Solver::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:341
#11 0x00007f2dc1f0553a in ghost::Solver::solve(double&, std::vector<int, std::allocator<int> >&, double, double, bool) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:155
0x00007f2765d10c02 in ghost::Random::Random (other=..., this=0x560f8bae6728) at /usr/include/c++/8/ext/new_allocator.h:86
#0  0x00007f2765d10c02 in ghost::Random::Random (other=..., this=0x560f8bae6728) at /usr/include/c++/8/ext/new_allocator.h:86
#1  ghost::Domain::Domain(ghost::Domain const&) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/domain.cpp:71
#2  0x00007f2765d115ba in ghost::Variable::Variable(ghost::Variable const&) () at /usr/include/c++/8/bits/basic_string.h:936
#3  0x0000560f8aa39743 in void std::vector<ghost::Variable, std::allocator<ghost::Variable> >::_M_realloc_insert<ghost::Variable>(__gnu_cxx::__normal_iterator<ghost::Variable*, std::vector<ghost::Variable, std::allocator<ghost::Variable> > >, ghost::Variable&&) ()
#4  0x0000560f8aa3945e in std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > > std::transform<__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, __gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}) [clone .isra.44] ()
#5  0x0000560f8aa394b4 in g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int) ()
#7  0x00007f2765d1241a in ghost::Constraint::cost (this=<optimized out>) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/include/constraint.hpp:108
#8  ghost::Solver::compute_constraints_costs (this=this@entry=0x7ffd7569c6a0, costConstraints=std::vector of length 7, capacity 7 = {...}) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:293
#9  0x00007f2765d14523 in ghost::Solver::solve(double&, std::vector<int, std::allocator<int> >&, double, double, bool) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:154
#0  0x00007f2765d10c02 in ghost::Random::Random (other=..., this=0x560f8bae6728) at /usr/include/c++/8/ext/new_allocator.h:86
#1  ghost::Domain::Domain(ghost::Domain const&) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/domain.cpp:71
#2  0x00007f2765d115ba in ghost::Variable::Variable(ghost::Variable const&) () at /usr/include/c++/8/bits/basic_string.h:936
#3  0x0000560f8aa39743 in void std::vector<ghost::Variable, std::allocator<ghost::Variable> >::_M_realloc_insert<ghost::Variable>(__gnu_cxx::__normal_iterator<ghost::Variable*, std::vector<ghost::Variable, std::allocator<ghost::Variable> > >, ghost::Variable&&) ()
#4  0x0000560f8aa3945e in std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > > std::transform<__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, __gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}) [clone .isra.44] ()
#5  0x0000560f8aa394b4 in g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int) ()
#7  0x00007f2765d1241a in ghost::Constraint::cost (this=<optimized out>) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/include/constraint.hpp:108
#8  ghost::Solver::compute_constraints_costs (this=this@entry=0x7ffd7569c6a0, costConstraints=std::vector of length 7, capacity 7 = {...}) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:293
#9  0x00007f2765d14523 in ghost::Solver::solve(double&, std::vector<int, std::allocator<int> >&, double, double, bool) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:154
#0  0x00007f2765d10c02 in ghost::Random::Random (other=..., this=0x560f8bae6728) at /usr/include/c++/8/ext/new_allocator.h:86
#1  ghost::Domain::Domain(ghost::Domain const&) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/domain.cpp:71
#2  0x00007f2765d115ba in ghost::Variable::Variable(ghost::Variable const&) () at /usr/include/c++/8/bits/basic_string.h:936
#3  0x0000560f8aa39743 in void std::vector<ghost::Variable, std::allocator<ghost::Variable> >::_M_realloc_insert<ghost::Variable>(__gnu_cxx::__normal_iterator<ghost::Variable*, std::vector<ghost::Variable, std::allocator<ghost::Variable> > >, ghost::Variable&&) ()
#4  0x0000560f8aa3945e in std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > > std::transform<__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, __gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}) [clone .isra.44] ()
#5  0x0000560f8aa394b4 in g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int) ()
#7  0x00007f2765d1241a in ghost::Constraint::cost (this=<optimized out>) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/include/constraint.hpp:108
#8  ghost::Solver::compute_constraints_costs (this=this@entry=0x7ffd7569c6a0, costConstraints=std::vector of length 7, capacity 7 = {...}) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:293
#9  0x00007f2765d14523 in ghost::Solver::solve(double&, std::vector<int, std::allocator<int> >&, double, double, bool) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:154
0x00007f2765d10c02 in ghost::Random::Random (other=..., this=0x560f8bb1d178) at /usr/include/c++/8/ext/new_allocator.h:86
#0  0x00007f2765d10c02 in ghost::Random::Random (other=..., this=0x560f8bb1d178) at /usr/include/c++/8/ext/new_allocator.h:86
#1  ghost::Domain::Domain(ghost::Domain const&) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/domain.cpp:71
#2  0x00007f2765d115ba in ghost::Variable::Variable(ghost::Variable const&) () at /usr/include/c++/8/bits/basic_string.h:936
#3  0x0000560f8aa39743 in void std::vector<ghost::Variable, std::allocator<ghost::Variable> >::_M_realloc_insert<ghost::Variable>(__gnu_cxx::__normal_iterator<ghost::Variable*, std::vector<ghost::Variable, std::allocator<ghost::Variable> > >, ghost::Variable&&) ()
#4  0x0000560f8aa3945e in std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > > std::transform<__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, __gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}) [clone .isra.44] ()
#5  0x0000560f8aa394b4 in g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int) ()
#7  0x00007f2765d1318b in ghost::Constraint::cost (this=<optimized out>) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/include/constraint.hpp:108
#8  ghost::Solver::simulate_local_move_cost (this=this@entry=0x7ffd7569c6a0, variable=variable@entry=0x7f2764c7e010, value=<optimized out>, costConstraints=std::vector of length 7, capacity 7 = {...}, currentSatCost=currentSatCost@entry=1.9614451651537674) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:510
#9  0x00007f2765d14068 in ghost::Solver::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:341
#10 0x00007f2765d1453a in ghost::Solver::solve(double&, std::vector<int, std::allocator<int> >&, double, double, bool) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:155
#0  0x00007f2765d10c02 in ghost::Random::Random (other=..., this=0x560f8bb1d178) at /usr/include/c++/8/ext/new_allocator.h:86
#1  ghost::Domain::Domain(ghost::Domain const&) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/domain.cpp:71
#2  0x00007f2765d115ba in ghost::Variable::Variable(ghost::Variable const&) () at /usr/include/c++/8/bits/basic_string.h:936
#3  0x0000560f8aa39743 in void std::vector<ghost::Variable, std::allocator<ghost::Variable> >::_M_realloc_insert<ghost::Variable>(__gnu_cxx::__normal_iterator<ghost::Variable*, std::vector<ghost::Variable, std::allocator<ghost::Variable> > >, ghost::Variable&&) ()
#4  0x0000560f8aa3945e in std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > > std::transform<__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, __gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}) [clone .isra.44] ()
#5  0x0000560f8aa394b4 in g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int) ()
#7  0x00007f2765d1318b in ghost::Constraint::cost (this=<optimized out>) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/include/constraint.hpp:108
#8  ghost::Solver::simulate_local_move_cost (this=this@entry=0x7ffd7569c6a0, variable=variable@entry=0x7f2764c7e010, value=<optimized out>, costConstraints=std::vector of length 7, capacity 7 = {...}, currentSatCost=currentSatCost@entry=1.9614451651537674) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:510
#9  0x00007f2765d14068 in ghost::Solver::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:341
#10 0x00007f2765d1453a in ghost::Solver::solve(double&, std::vector<int, std::allocator<int> >&, double, double, bool) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:155
#0  0x00007f2765d10c02 in ghost::Random::Random (other=..., this=0x560f8bb1d178) at /usr/include/c++/8/ext/new_allocator.h:86
#1  ghost::Domain::Domain(ghost::Domain const&) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/domain.cpp:71
#2  0x00007f2765d115ba in ghost::Variable::Variable(ghost::Variable const&) () at /usr/include/c++/8/bits/basic_string.h:936
#3  0x0000560f8aa39743 in void std::vector<ghost::Variable, std::allocator<ghost::Variable> >::_M_realloc_insert<ghost::Variable>(__gnu_cxx::__normal_iterator<ghost::Variable*, std::vector<ghost::Variable, std::allocator<ghost::Variable> > >, ghost::Variable&&) ()
#4  0x0000560f8aa3945e in std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > > std::transform<__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, __gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}) [clone .isra.44] ()
#5  0x0000560f8aa394b4 in g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int) ()
#7  0x00007f2765d1318b in ghost::Constraint::cost (this=<optimized out>) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/include/constraint.hpp:108
#8  ghost::Solver::simulate_local_move_cost (this=this@entry=0x7ffd7569c6a0, variable=variable@entry=0x7f2764c7e010, value=<optimized out>, costConstraints=std::vector of length 7, capacity 7 = {...}, currentSatCost=currentSatCost@entry=1.9614451651537674) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:510
#9  0x00007f2765d14068 in ghost::Solver::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:341
#10 0x00007f2765d1453a in ghost::Solver::solve(double&, std::vector<int, std::allocator<int> >&, double, double, bool) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:155
0x00007f2765d10c02 in ghost::Random::Random (other=..., this=0x560f8bb07170) at /usr/include/c++/8/ext/new_allocator.h:86
#0  0x00007f2765d10c02 in ghost::Random::Random (other=..., this=0x560f8bb07170) at /usr/include/c++/8/ext/new_allocator.h:86
#1  ghost::Domain::Domain(ghost::Domain const&) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/domain.cpp:71
#2  0x00007f2765d115ba in ghost::Variable::Variable(ghost::Variable const&) () at /usr/include/c++/8/bits/basic_string.h:936
#3  0x0000560f8aa39743 in void std::vector<ghost::Variable, std::allocator<ghost::Variable> >::_M_realloc_insert<ghost::Variable>(__gnu_cxx::__normal_iterator<ghost::Variable*, std::vector<ghost::Variable, std::allocator<ghost::Variable> > >, ghost::Variable&&) ()
#4  0x0000560f8aa3945e in std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > > std::transform<__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, __gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}) [clone .isra.44] ()
#5  0x0000560f8aa394b4 in g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int) ()
#7  0x00007f2765d1318b in ghost::Constraint::cost (this=<optimized out>) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/include/constraint.hpp:108
#8  ghost::Solver::simulate_local_move_cost (this=this@entry=0x7ffd7569c6a0, variable=variable@entry=0x7f2764c807b8, value=<optimized out>, costConstraints=std::vector of length 7, capacity 7 = {...}, currentSatCost=currentSatCost@entry=1.9614451651537674) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:510
#9  0x00007f2765d14068 in ghost::Solver::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:341
#10 0x00007f2765d1453a in ghost::Solver::solve(double&, std::vector<int, std::allocator<int> >&, double, double, bool) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:155
#0  0x00007f2765d10c02 in ghost::Random::Random (other=..., this=0x560f8bb07170) at /usr/include/c++/8/ext/new_allocator.h:86
#1  ghost::Domain::Domain(ghost::Domain const&) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/domain.cpp:71
#2  0x00007f2765d115ba in ghost::Variable::Variable(ghost::Variable const&) () at /usr/include/c++/8/bits/basic_string.h:936
#3  0x0000560f8aa39743 in void std::vector<ghost::Variable, std::allocator<ghost::Variable> >::_M_realloc_insert<ghost::Variable>(__gnu_cxx::__normal_iterator<ghost::Variable*, std::vector<ghost::Variable, std::allocator<ghost::Variable> > >, ghost::Variable&&) ()
#4  0x0000560f8aa3945e in std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > > std::transform<__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, __gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}) [clone .isra.44] ()
#5  0x0000560f8aa394b4 in g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int) ()
#7  0x00007f2765d1318b in ghost::Constraint::cost (this=<optimized out>) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/include/constraint.hpp:108
#8  ghost::Solver::simulate_local_move_cost (this=this@entry=0x7ffd7569c6a0, variable=variable@entry=0x7f2764c807b8, value=<optimized out>, costConstraints=std::vector of length 7, capacity 7 = {...}, currentSatCost=currentSatCost@entry=1.9614451651537674) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:510
#9  0x00007f2765d14068 in ghost::Solver::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:341
#10 0x00007f2765d1453a in ghost::Solver::solve(double&, std::vector<int, std::allocator<int> >&, double, double, bool) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:155
#0  0x00007f2765d10c02 in ghost::Random::Random (other=..., this=0x560f8bb07170) at /usr/include/c++/8/ext/new_allocator.h:86
#1  ghost::Domain::Domain(ghost::Domain const&) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/domain.cpp:71
#2  0x00007f2765d115ba in ghost::Variable::Variable(ghost::Variable const&) () at /usr/include/c++/8/bits/basic_string.h:936
#3  0x0000560f8aa39743 in void std::vector<ghost::Variable, std::allocator<ghost::Variable> >::_M_realloc_insert<ghost::Variable>(__gnu_cxx::__normal_iterator<ghost::Variable*, std::vector<ghost::Variable, std::allocator<ghost::Variable> > >, ghost::Variable&&) ()
#4  0x0000560f8aa3945e in std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > > std::transform<__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, __gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}) [clone .isra.44] ()
#5  0x0000560f8aa394b4 in g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int) ()
#7  0x00007f2765d1318b in ghost::Constraint::cost (this=<optimized out>) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/include/constraint.hpp:108
#8  ghost::Solver::simulate_local_move_cost (this=this@entry=0x7ffd7569c6a0, variable=variable@entry=0x7f2764c807b8, value=<optimized out>, costConstraints=std::vector of length 7, capacity 7 = {...}, currentSatCost=currentSatCost@entry=1.9614451651537674) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:510
#9  0x00007f2765d14068 in ghost::Solver::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:341
#10 0x00007f2765d1453a in ghost::Solver::solve(double&, std::vector<int, std::allocator<int> >&, double, double, bool) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:155
0x00007f2765d10c02 in ghost::Random::Random (other=..., this=0x560f8bb13618) at /usr/include/c++/8/ext/new_allocator.h:86
#0  0x00007f2765d10c02 in ghost::Random::Random (other=..., this=0x560f8bb13618) at /usr/include/c++/8/ext/new_allocator.h:86
#1  ghost::Domain::Domain(ghost::Domain const&) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/domain.cpp:71
#2  0x00007f2765d115ba in ghost::Variable::Variable(ghost::Variable const&) () at /usr/include/c++/8/bits/basic_string.h:936
#3  0x0000560f8aa39743 in void std::vector<ghost::Variable, std::allocator<ghost::Variable> >::_M_realloc_insert<ghost::Variable>(__gnu_cxx::__normal_iterator<ghost::Variable*, std::vector<ghost::Variable, std::allocator<ghost::Variable> > >, ghost::Variable&&) ()
#4  0x0000560f8aa3945e in std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > > std::transform<__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, __gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}) [clone .isra.44] ()
#5  0x0000560f8aa394b4 in g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int) ()
#7  0x00007f2765d1318b in ghost::Constraint::cost (this=<optimized out>) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/include/constraint.hpp:108
#8  ghost::Solver::simulate_local_move_cost (this=this@entry=0x7ffd7569c6a0, variable=variable@entry=0x7f2764c82f60, value=<optimized out>, costConstraints=std::vector of length 7, capacity 7 = {...}, currentSatCost=currentSatCost@entry=1.9614451651537674) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:510
#9  0x00007f2765d14068 in ghost::Solver::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:341
#10 0x00007f2765d1453a in ghost::Solver::solve(double&, std::vector<int, std::allocator<int> >&, double, double, bool) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:155
#0  0x00007f2765d10c02 in ghost::Random::Random (other=..., this=0x560f8bb13618) at /usr/include/c++/8/ext/new_allocator.h:86
#1  ghost::Domain::Domain(ghost::Domain const&) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/domain.cpp:71
#2  0x00007f2765d115ba in ghost::Variable::Variable(ghost::Variable const&) () at /usr/include/c++/8/bits/basic_string.h:936
#3  0x0000560f8aa39743 in void std::vector<ghost::Variable, std::allocator<ghost::Variable> >::_M_realloc_insert<ghost::Variable>(__gnu_cxx::__normal_iterator<ghost::Variable*, std::vector<ghost::Variable, std::allocator<ghost::Variable> > >, ghost::Variable&&) ()
#4  0x0000560f8aa3945e in std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > > std::transform<__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, __gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}) [clone .isra.44] ()
#5  0x0000560f8aa394b4 in g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int) ()
#7  0x00007f2765d1318b in ghost::Constraint::cost (this=<optimized out>) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/include/constraint.hpp:108
#8  ghost::Solver::simulate_local_move_cost (this=this@entry=0x7ffd7569c6a0, variable=variable@entry=0x7f2764c82f60, value=<optimized out>, costConstraints=std::vector of length 7, capacity 7 = {...}, currentSatCost=currentSatCost@entry=1.9614451651537674) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:510
#9  0x00007f2765d14068 in ghost::Solver::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:341
#10 0x00007f2765d1453a in ghost::Solver::solve(double&, std::vector<int, std::allocator<int> >&, double, double, bool) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:155
#0  0x00007f2765d10c02 in ghost::Random::Random (other=..., this=0x560f8bb13618) at /usr/include/c++/8/ext/new_allocator.h:86
#1  ghost::Domain::Domain(ghost::Domain const&) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/domain.cpp:71
#2  0x00007f2765d115ba in ghost::Variable::Variable(ghost::Variable const&) () at /usr/include/c++/8/bits/basic_string.h:936
#3  0x0000560f8aa39743 in void std::vector<ghost::Variable, std::allocator<ghost::Variable> >::_M_realloc_insert<ghost::Variable>(__gnu_cxx::__normal_iterator<ghost::Variable*, std::vector<ghost::Variable, std::allocator<ghost::Variable> > >, ghost::Variable&&) ()
#4  0x0000560f8aa3945e in std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > > std::transform<__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, std::back_insert_iterator<std::vector<ghost::Variable, std::allocator<ghost::Variable> > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, __gnu_cxx::__normal_iterator<std::reference_wrapper<ghost::Variable> const*, std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > >, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}, g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int)::{lambda(auto:1&)#1}) [clone .isra.44] ()
#5  0x0000560f8aa394b4 in g(std::vector<std::reference_wrapper<ghost::Variable>, std::allocator<std::reference_wrapper<ghost::Variable> > > const&, std::vector<int, std::allocator<int> > const&, int) ()
#7  0x00007f2765d1318b in ghost::Constraint::cost (this=<optimized out>) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/include/constraint.hpp:108
#8  ghost::Solver::simulate_local_move_cost (this=this@entry=0x7ffd7569c6a0, variable=variable@entry=0x7f2764c82f60, value=<optimized out>, costConstraints=std::vector of length 7, capacity 7 = {...}, currentSatCost=currentSatCost@entry=1.9614451651537674) at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:510
#9  0x00007f2765d14068 in ghost::Solver::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:341
#10 0x00007f2765d1453a in ghost::Solver::solve(double&, std::vector<int, std::allocator<int> >&, double, double, bool) () at /home/flo/GitSynchronized/Recherche/Programmes/GHOST/src/solver.cpp:155
